[
    {
        "query": "Please help me find a pasta recipe, rice recipe, and steak recipe, each with a carbohydrate content between 10 and 50 grams per gram. Among these recipes, which one has the highest calorie content and what equipment is needed for it?",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_recipes",
                3
            ],
            [
                "GET_equipment_by_id",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/complexSearch",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json"
        ],
        "dataset": "food",
        "qid": "q0"
    },
    {
        "query": "Please help me find a pasta recipe and a steak recipe, each with a carbohydrate content of between 10 and 50 grams per gram. Among these recipes, which one contains the fewest ingredients? For the recipe with the fewest ingredients, could you also find three similar recipes and provide their names?",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_recipes",
                2
            ],
            [
                "GET_ingredients_by_id",
                1
            ],
            [
                "GET_ingredients_by_id",
                1
            ],
            [
                "GET_search_similar_recipes",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/complexSearch",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/ingredientWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/ingredientWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/similar"
        ],
        "dataset": "food",
        "qid": "q1"
    },
    {
        "query": "I'd like to know what type of wine is best paired with beef and fish. Also, please find three products related to beef and their prices.",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_wine_pairing",
                2
            ],
            [
                "GET_search_grocery_product",
                1
            ],
            [
                "GET_product_information",
                1
            ],
            [
                "GET_product_information",
                1
            ],
            [
                "GET_product_information",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/wine/pairing",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/search",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}"
        ],
        "dataset": "food",
        "qid": "q2"
    },
    {
        "query": "Please help me find a pasta recipe, rice recipe, and steak recipe, each with a carbohydrate content between 10 and 50 grams per gram. Among these recipes, how many calories are in the one that contains the most ingredients?",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_recipes",
                3
            ],
            [
                "GET_ingredients_by_id",
                1
            ],
            [
                "GET_ingredients_by_id",
                1
            ],
            [
                "GET_ingredients_by_id",
                1
            ],
            [
                "GET_nutrition_by_id",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/complexSearch",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/ingredientWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/ingredientWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/ingredientWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/nutritionWidget.json"
        ],
        "dataset": "food",
        "qid": "q3"
    },
    {
        "query": "I'd like to make lunch and need to find some ingredients (simple whole foods), including sauce, yogurt, nuts, and milk. For each type of ingredient, please help me find the cheapest option.",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_ingredient_search_simple_food",
                4
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/ingredients/search"
        ],
        "dataset": "food",
        "qid": "q4"
    },
    {
        "query": "Please help me find five menus that include milk. Among these, which one has the highest protein content, and what is the name of that menu?",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_menu_items",
                1
            ],
            [
                "GET_menu_item_information",
                1
            ],
            [
                "GET_menu_item_information",
                1
            ],
            [
                "GET_menu_item_information",
                1
            ],
            [
                "GET_menu_item_information",
                1
            ],
            [
                "GET_menu_item_information",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/menuItems/search",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/menuItems/{item_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/menuItems/{item_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/menuItems/{item_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/menuItems/{item_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/menuItems/{item_id}"
        ],
        "dataset": "food",
        "qid": "q5"
    },
    {
        "query": "Please help me find a pasta recipe, a rice recipe, and a steak recipe, each with a carbohydrate content between 10 and 50 grams per gram. Also, let me know which of these recipes contains the fewest ingredients and which one has the lowest calorie content.",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_recipes",
                3
            ],
            [
                "GET_ingredients_by_id",
                1
            ],
            [
                "GET_nutrition_by_id",
                1
            ],
            [
                "GET_ingredients_by_id",
                1
            ],
            [
                "GET_nutrition_by_id",
                1
            ],
            [
                "GET_ingredients_by_id",
                1
            ],
            [
                "GET_nutrition_by_id",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/complexSearch",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/ingredientWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/nutritionWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/ingredientWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/nutritionWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/ingredientWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/nutritionWidget.json"
        ],
        "dataset": "food",
        "qid": "q6"
    },
    {
        "query": "Please help me find three recipes that include flour and milk as ingredients. Among these recipes, which one requires the least equipment? Also, please provide a brief text summary of that recipe.",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_recipes_by_ingredients",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_summarize_recipe",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/summary"
        ],
        "dataset": "food",
        "qid": "q7"
    },
    {
        "query": "Please help me find three random recipes tagged as vegetarian. Among these, which one has the highest total cost? I would also like a brief summary in the text format of that recipe.",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_random_recipes",
                1
            ],
            [
                "GET_search_recipe_information",
                1
            ],
            [
                "GET_search_recipe_information",
                1
            ],
            [
                "GET_search_recipe_information",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/random",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/information",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/information",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/information"
        ],
        "dataset": "food",
        "qid": "q8"
    },
    {
        "query": "Please help me find a pizza recipe and a pasta recipe, each with a carbohydrate content between 10 and 50 grams per gram and a protein content of at least 10 grams per gram. Also, could you tell me what the taste of these two recipes is like and what equipment is needed for each?",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_recipes",
                2
            ],
            [
                "GET_taste_by_id",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_taste_by_id",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/complexSearch",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/tasteWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/tasteWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json"
        ],
        "dataset": "food",
        "qid": "q9"
    },
    {
        "query": "I'm looking to buy some sauce products with no more than 2000 calories and a minimum protein content of at least 5 grams per gram. Please help me find three sauces that meet these criteria, and tell me which one of these sauces has the most comprehensive nutritional content.",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_grocery_product",
                1
            ],
            [
                "GET_product_information",
                1
            ],
            [
                "GET_product_information",
                1
            ],
            [
                "GET_product_information",
                2
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/search",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}"
        ],
        "dataset": "food",
        "qid": "q10"
    },
    {
        "query": "Please help me find five recipes that include apples and milk as ingredients. Among these recipes, which one requires the least equipment? Also, what is the cost of that recipe?",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_recipes_by_ingredients",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_search_recipe_information",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_search_recipe_information",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/information",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/information",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json"
        ],
        "dataset": "food",
        "qid": "q11"
    },
    {
        "query": "Please help me find three random dessert recipes. Among these, which one has the lowest total cost? I would also like a brief summary in the text format of that recipe.",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_random_recipes",
                1
            ],
            [
                "GET_search_recipe_information",
                1
            ],
            [
                "GET_search_recipe_information",
                1
            ],
            [
                "GET_search_recipe_information",
                1
            ],
            [
                "GET_summarize_recipe",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/random",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/information",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/information",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/information",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/summary"
        ],
        "dataset": "food",
        "qid": "q12"
    },
    {
        "query": "Please help me find a steak recipe and a pasta recipe. These recipes should have a carbohydrate content no higher than 80 grams per 100 grams, no lower than 5 grams per 100 grams. The protein content should be at least 5 grams per 100 grams for each recipe. Also, please find out what equipment is needed to make both recipes. Among them, which recipe requires fewer pieces of equipment, and how many ingredients does the recipe with fewer equipment contain?",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_recipes",
                2
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_ingredients_by_id",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_ingredients_by_id",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/complexSearch",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/ingredientWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/ingredientWidget.json"
        ],
        "dataset": "food",
        "qid": "q13"
    },
    {
        "query": "I'm shopping for drinks for a Christmas dinner. Please help me find one type each of orange juice, pear juice, and apple juice. Could you provide the names of these juices and tell me what category each belongs to?",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_grocery_product",
                3
            ],
            [
                "GET_product_information",
                1
            ],
            [
                "GET_product_information",
                1
            ],
            [
                "GET_product_information",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/search",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}"
        ],
        "dataset": "food",
        "qid": "q14"
    },
    {
        "query": "Please help me search a pasta recipe, rice recipe, and steak recipe, each with a carbohydrate content between 10 and 50 grams per gram. Which of these recipes requires the most equipment, and which one has the highest calorie content?",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_recipes",
                3
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_nutrition_by_id",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_nutrition_by_id",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_nutrition_by_id",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/complexSearch",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/nutritionWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/nutritionWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/nutritionWidget.json"
        ],
        "dataset": "food",
        "qid": "q15"
    },
    {
        "query": "Please help me find five types of nuts product, with no specific nutritional requirements. Among these nuts, which one is expected to be the cheapest?",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_ingredient_search_simple_food",
                1
            ],
            [
                "GET_ingredient_information",
                1
            ],
            [
                "GET_ingredient_information",
                1
            ],
            [
                "GET_ingredient_information",
                1
            ],
            [
                "GET_ingredient_information",
                1
            ],
            [
                "GET_ingredient_information",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/ingredients/search",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/ingredients/{ingredient_id}/information",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/ingredients/{ingredient_id}/information",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/ingredients/{ingredient_id}/information",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/ingredients/{ingredient_id}/information",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/ingredients/{ingredient_id}/information"
        ],
        "dataset": "food",
        "qid": "q16"
    },
    {
        "query": "Please help me find three burger menus. Among these, which one has the highest calorie content, and what is the name of the chain restaurant it belongs to?",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_menu_items",
                1
            ],
            [
                "GET_menu_item_information",
                1
            ],
            [
                "GET_menu_item_information",
                1
            ],
            [
                "GET_menu_item_information",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/menuItems/search",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/menuItems/{item_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/menuItems/{item_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/menuItems/{item_id}"
        ],
        "dataset": "food",
        "qid": "q17"
    },
    {
        "query": "Please help me search a pasta recipe, a rice recipe, and a steak recipe, each with a carbohydrate content between 10 and 50 grams per gram. Also, tell me the calorie content of the recipe that requires the least equipment, and how much it would cost to purchase the ingredients.",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_recipes",
                3
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_equipment_by_id",
                1
            ],
            [
                "GET_nutrition_by_id",
                1
            ],
            [
                "GET_Price_Breakdown_by_id",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/complexSearch",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/equipmentWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/nutritionWidget.json",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/{recipe_id}/priceBreakdownWidget.json"
        ],
        "dataset": "food",
        "qid": "q18"
    },
    {
        "query": "Please help me find five types of sauce products, with no specific nutritional requirements. Among these sauces, what is the name of the one with the highest calories?",
        "api_list": [
            "GET_menu_item_information",
            "GET_ingredient_information",
            "GET_summarize_recipe",
            "GET_dish_pairing_for_wine",
            "GET_search_similar_recipes",
            "GET_search_menu_items",
            "GET_search_recipes_by_nutrients",
            "GET_taste_by_id",
            "GET_ingredient_search_simple_food",
            "GET_wine_pairing",
            "GET_wine_description",
            "GET_search_recipes_by_ingredients",
            "GET_wine_recommendation",
            "GET_search_random_recipes",
            "GET_search_grocery_product",
            "GET_search_recipe_information",
            "GET_nutrition_by_id",
            "GET_product_information",
            "GET_ingredients_by_id",
            "GET_equipment_by_id",
            "GET_search_recipes",
            "GET_Price_Breakdown_by_id"
        ],
        "solution": [
            [
                "GET_search_grocery_product",
                1
            ],
            [
                "GET_product_information",
                1
            ],
            [
                "GET_product_information",
                1
            ],
            [
                "GET_product_information",
                1
            ],
            [
                "GET_product_information",
                1
            ],
            [
                "GET_product_information",
                1
            ]
        ],
        "url": [
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/search",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}",
            "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/products/{product_id}"
        ],
        "dataset": "food",
        "qid": "q19"
    },
    {
        "qid": "q0",
        "query": "Please tell me Taylor Swift's Influence Quotient (IQ), and tell me the name of her currently most popular song. How many comments has this song received in total? If the number of comments is greater than 0, please tell me the name of the user who posted the most recent comment.",
        "solution": [
            "GET_multi_search",
            "GET_artist_songs",
            "GET_song_details",
            "GET_song_comments",
            "GET_user_details"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/multi/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/songs/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/comments/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/details/"
        ],
        "api_list": [
            "GET_artist_songs",
            "GET_user_details",
            "GET_multi_search",
            "GET_song_details",
            "GET_song_comments",
            "GET_leaderboard",
            "GET_videos",
            "GET_user_contributions_annotations",
            "GET_chart_artists",
            "GET_album_appearances",
            "GET_annotation_details",
            "GET_chart_songs",
            "GET_user_contributions_articles",
            "GET_user_contributions_unreviewed_annotations",
            "GET_artist_leaderboard",
            "GET_user_following",
            "GET_artist_activity",
            "GET_user_followers",
            "GET_song_lyrics",
            "GET_artist_details"
        ]
    },
    {
        "qid": "q2",
        "query": "Please tell me who the main author of the song 'Love Story' is? How many followers does this author currently have? What is the name of this author's most popular song? What is the name of this author's most popular album? When was this album released?",
        "solution": [
            "GET_search",
            "GET_artist_details",
            "GET_artist_songs",
            "GET_artist_albums",
            "GET_album_details"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/songs/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/albums/",
            "https://genius-song-lyrics1.p.rapidapi.com/album/details/"
        ],
        "api_list": [
            "GET_artist_albums",
            "GET_artist_songs",
            "GET_album_details",
            "GET_artist_details",
            "GET_search",
            "GET_chart_albums",
            "GET_album_appearances",
            "GET_song_comments",
            "GET_leaderboard",
            "GET_song_lyrics",
            "GET_chart_artists",
            "GET_user_contributions_unreviewed_annotations",
            "GET_user_contributions_articles",
            "GET_user_contributions_qa",
            "GET_user_details",
            "GET_multi_search",
            "GET_user_contributions_suggestions",
            "GET_user_contributions_transcriptions",
            "GET_chart_songs",
            "GET_artist_activity"
        ]
    },
    {
        "qid": "q4",
        "query": "Please tell me who the author of the album 'Reputation' is? How many followers does this author currently have? Has this author's contribution score greater than 100? If yes, please tell me the release date of this author's most popular album. If not, please tell me the release date of this author's most popular song.",
        "solution": [
            "GET_multi_search",
            "GET_artist_details",
            "GET_artist_albums",
            "GET_artist_songs",
            "GET_song_details",
            "GET_album_details"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/multi/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/albums/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/songs/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/album/details/"
        ],
        "api_list": [
            "GET_artist_albums",
            "GET_artist_songs",
            "GET_album_details",
            "GET_artist_details",
            "GET_multi_search",
            "GET_song_details",
            "GET_user_contributions",
            "GET_user_contributions_suggestions",
            "GET_user_details",
            "GET_chart_songs",
            "GET_user_following",
            "GET_chart_artists",
            "GET_referents",
            "GET_user_contributions_unreviewed_annotations",
            "GET_artist_leaderboard",
            "GET_user_contributions_annotations",
            "GET_album_comments",
            "GET_search",
            "GET_annotation_versions",
            "GET_user_contributions_articles"
        ]
    },
    {
        "qid": "q6",
        "query": "Please tell me how many fans the artist ranked second on today's artist chart has? What is the most popular album of this artist? Is the first track on this album purely instrumental? If yes, please tell me the release date of this song.",
        "solution": [
            "GET_chart_artists",
            "GET_artist_details",
            "GET_artist_albums",
            "GET_album_appearances"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/chart/artists/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/albums/",
            "https://genius-song-lyrics1.p.rapidapi.com/album/appearances/"
        ],
        "api_list": [
            "GET_album_appearances",
            "GET_artist_albums",
            "GET_artist_details",
            "GET_chart_artists",
            "GET_user_contributions_suggestions",
            "GET_user_followers",
            "GET_album_details",
            "GET_user_following",
            "GET_user_contributions",
            "GET_song_comments",
            "GET_user_contributions_unreviewed_annotations",
            "GET_artist_activity",
            "GET_videos",
            "GET_user_contributions_annotations",
            "GET_multi_search",
            "GET_annotation_details",
            "GET_song_recommendations",
            "GET_album_comments",
            "GET_leaderboard",
            "GET_referents"
        ]
    },
    {
        "qid": "q8",
        "query": "Please tell me the name of the album ranked first on today's album chart? What is the contribution score of the album's author? How many comments has this album received? What is the release date of the second track on this album?",
        "solution": [
            "GET_chart_albums",
            "GET_artist_details",
            "GET_album_details",
            "GET_album_appearances"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/chart/albums/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/album/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/album/appearances/"
        ],
        "api_list": [
            "GET_album_appearances",
            "GET_artist_details",
            "GET_chart_albums",
            "GET_album_details",
            "GET_artist_songs",
            "GET_user_contributions_unreviewed_annotations",
            "GET_song_recommendations",
            "GET_user_contributions_articles",
            "GET_user_contributions_transcriptions",
            "GET_chart_songs",
            "GET_song_comments",
            "GET_user_following",
            "GET_search",
            "GET_annotation_versions",
            "GET_referents",
            "GET_user_contributions_suggestions",
            "GET_chart_artists",
            "GET_album_comments",
            "GET_user_contributions",
            "GET_user_details"
        ]
    },
    {
        "qid": "q10",
        "query": "Please tell me the name of the song ranked first on today's song chart? What is the contribution score of the song's author? How many comments has this song received? If the number of comments is greater than 0, how many people does the user who posted the most recent comment follow?",
        "solution": [
            "GET_chart_songs",
            "GET_artist_details",
            "GET_song_details",
            "GET_song_comments",
            "GET_user_details"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/chart/songs/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/comments/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/details/"
        ],
        "api_list": [
            "GET_user_details",
            "GET_artist_details",
            "GET_song_details",
            "GET_chart_songs",
            "GET_song_comments",
            "GET_album_appearances",
            "GET_user_contributions",
            "GET_song_recommendations",
            "GET_user_followers",
            "GET_multi_search",
            "GET_artist_activity",
            "GET_search",
            "GET_artist_songs",
            "GET_annotation_details",
            "GET_song_lyrics",
            "GET_leaderboard",
            "GET_user_contributions_annotations",
            "GET_annotation_versions",
            "GET_album_comments",
            "GET_referents"
        ]
    },
    {
        "qid": "q12",
        "query": "Please tell me the name of the user ranked first on today's user contribution leaderboard? How many people does he/she follow? If the number of people he/she follows is greater than 0, what is the name of the first user on his/her follow list, and does this first user follow him back?",
        "solution": [
            "GET_leaderboard",
            "GET_user_details",
            "GET_user_following",
            "GET_user_details",
            "GET_user_following"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/leaderboard/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/following/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/following/"
        ],
        "api_list": [
            "GET_leaderboard",
            "GET_user_following",
            "GET_user_details",
            "GET_chart_artists",
            "GET_user_contributions_transcriptions",
            "GET_videos",
            "GET_user_contributions_qa",
            "GET_user_contributions",
            "GET_user_contributions_suggestions",
            "GET_artist_details",
            "GET_referents",
            "GET_artist_leaderboard",
            "GET_search",
            "GET_user_contributions_unreviewed_annotations",
            "GET_album_comments",
            "GET_annotation_details",
            "GET_song_lyrics",
            "GET_album_details",
            "GET_multi_search",
            "GET_song_details"
        ]
    },
    {
        "qid": "q14",
        "query": "How many comments has the song 'Shape of You' received? What is the username of the user who posted the latest comment? Does this user follow the main author of the song 'Shape of You?",
        "solution": [
            "GET_search",
            "GET_song_details",
            "GET_song_comments",
            "GET_user_details",
            "GET_user_following"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/comments/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/following/"
        ],
        "api_list": [
            "GET_user_details",
            "GET_search",
            "GET_song_details",
            "GET_user_following",
            "GET_song_comments",
            "GET_annotation_details",
            "GET_song_recommendations",
            "GET_album_comments",
            "GET_album_details",
            "GET_artist_leaderboard",
            "GET_chart_albums",
            "GET_user_contributions_articles",
            "GET_song_lyrics",
            "GET_leaderboard",
            "GET_multi_search",
            "GET_user_contributions_unreviewed_annotations",
            "GET_artist_songs",
            "GET_album_appearances",
            "GET_referents",
            "GET_user_contributions_qa"
        ]
    },
    {
        "qid": "q16",
        "query": "What is the 'pyongs_count' of the album \"When We All Fall Asleep, Where Do We Go?\"? What is the name of the first song on this album? How many songs on this album are in the 'hot' status? What is the contribution score of the first author's artist account on this album?",
        "solution": [
            "GET_multi_search",
            "GET_album_details",
            "GET_album_appearances",
            "GET_artist_details"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/multi/",
            "https://genius-song-lyrics1.p.rapidapi.com/album/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/album/appearances/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/details/"
        ],
        "api_list": [
            "GET_album_appearances",
            "GET_artist_details",
            "GET_multi_search",
            "GET_album_details",
            "GET_user_details",
            "GET_artist_songs",
            "GET_user_contributions_suggestions",
            "GET_chart_albums",
            "GET_album_comments",
            "GET_artist_albums",
            "GET_referents",
            "GET_user_contributions_annotations",
            "GET_leaderboard",
            "GET_song_comments",
            "GET_artist_activity",
            "GET_search",
            "GET_user_following",
            "GET_song_lyrics",
            "GET_user_contributions_qa",
            "GET_chart_artists"
        ]
    },
    {
        "qid": "q18",
        "query": "What is the name of The Weeknd's most popular song? How many comments does this song have? What is the content of the most liked comment among the latest 10 comments on this song? What is the profile description of the user who posted this comment?",
        "solution": [
            "GET_multi_search",
            "GET_artist_songs",
            "GET_song_comments",
            "GET_user_details"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/multi/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/songs/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/comments/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/details/"
        ],
        "api_list": [
            "GET_song_comments",
            "GET_artist_songs",
            "GET_multi_search",
            "GET_user_details",
            "GET_chart_albums",
            "GET_videos",
            "GET_chart_songs",
            "GET_album_details",
            "GET_user_contributions_unreviewed_annotations",
            "GET_artist_activity",
            "GET_user_followers",
            "GET_user_contributions_qa",
            "GET_artist_details",
            "GET_song_lyrics",
            "GET_user_following",
            "GET_referents",
            "GET_annotation_versions",
            "GET_artist_albums",
            "GET_album_appearances",
            "GET_artist_leaderboard"
        ]
    },
    {
        "qid": "q20",
        "query": "What is the name of the first song in Alan Walker's list sorted by title? Is this song in hot status? Among the top 10 recommended songs similar to this song, how many are in hot status?",
        "solution": [
            "GET_multi_search",
            "GET_artist_songs",
            "GET_song_details",
            "GET_song_recommendations"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/multi/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/songs/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/recommendations/"
        ],
        "api_list": [
            "GET_song_recommendations",
            "GET_song_details",
            "GET_artist_songs",
            "GET_multi_search",
            "GET_user_details",
            "GET_user_contributions_articles",
            "GET_chart_artists",
            "GET_chart_songs",
            "GET_album_appearances",
            "GET_user_contributions_annotations",
            "GET_artist_leaderboard",
            "GET_videos",
            "GET_annotation_versions",
            "GET_artist_activity",
            "GET_user_contributions_unreviewed_annotations",
            "GET_user_contributions_transcriptions",
            "GET_song_lyrics",
            "GET_chart_albums",
            "GET_leaderboard",
            "GET_album_comments"
        ]
    },
    {
        "qid": "q22",
        "query": "How many followers does Alan Walker have? What is the username of the user who created the first description_annotation about Alan Walker? Does this user follow Alan Walker ? If yes, tell me the content of the latest annotation posted by this user.",
        "solution": [
            "GET_multi_search",
            "GET_artist_details",
            "GET_user_details",
            "GET_user_following",
            "GET_user_contributions_annotations"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/multi/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/following/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/contributions/annotations/"
        ],
        "api_list": [
            "GET_user_details",
            "GET_artist_details",
            "GET_user_contributions_annotations",
            "GET_multi_search",
            "GET_user_following",
            "GET_song_lyrics",
            "GET_annotation_versions",
            "GET_chart_songs",
            "GET_song_comments",
            "GET_artist_activity",
            "GET_user_contributions_qa",
            "GET_album_details",
            "GET_song_recommendations",
            "GET_user_followers",
            "GET_annotation_details",
            "GET_artist_songs",
            "GET_song_details",
            "GET_user_contributions_transcriptions",
            "GET_user_contributions",
            "GET_album_comments"
        ]
    },
    {
        "qid": "q24",
        "query": "Is Alan Walker's artist account associated with a user account? If yes, what is the name of his user account? How many people does he follow? If not associated, tell me if the artist currently ranked first on the artist chart has associated a user account.",
        "solution": [
            "GET_multi_search",
            "GET_artist_details",
            "GET_user_details",
            "GET_chart_artists",
            "GET_artist_details"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/multi/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/chart/artists/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/details/"
        ],
        "api_list": [
            "GET_artist_details",
            "GET_chart_artists",
            "GET_multi_search",
            "GET_user_details",
            "GET_user_contributions_suggestions",
            "GET_chart_songs",
            "GET_annotation_details",
            "GET_videos",
            "GET_song_comments",
            "GET_artist_albums",
            "GET_user_contributions_transcriptions",
            "GET_album_comments",
            "GET_search",
            "GET_artist_activity",
            "GET_album_details",
            "GET_artist_leaderboard",
            "GET_user_contributions_articles",
            "GET_user_contributions_qa",
            "GET_leaderboard",
            "GET_song_lyrics"
        ]
    },
    {
        "qid": "q26",
        "query": "I like listening to the song 'bad guy'. What is the name of the song ranked fifth in the recommended list related to this song? Who is the author of this song? What is the name of his/her most popular album?",
        "solution": [
            "GET_search",
            "GET_song_recommendations",
            "GET_song_details",
            "GET_artist_albums"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/recommendations/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/albums/"
        ],
        "api_list": [
            "GET_artist_albums",
            "GET_song_details",
            "GET_search",
            "GET_song_recommendations",
            "GET_artist_activity",
            "GET_annotation_details",
            "GET_leaderboard",
            "GET_song_comments",
            "GET_artist_leaderboard",
            "GET_user_contributions",
            "GET_artist_songs",
            "GET_user_contributions_transcriptions",
            "GET_chart_songs",
            "GET_album_appearances",
            "GET_user_contributions_unreviewed_annotations",
            "GET_user_following",
            "GET_user_details",
            "GET_user_followers",
            "GET_chart_albums",
            "GET_multi_search"
        ]
    },
    {
        "qid": "q28",
        "query": "What is the name of Alan Walker's most popular album? Is the first song on this album purely instrumental? If yes, what is the name of the first non-instrumental song in the recommended list related to this song?",
        "solution": [
            "GET_multi_search",
            "GET_artist_albums",
            "GET_album_appearances",
            "GET_song_recommendations"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/multi/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/albums/",
            "https://genius-song-lyrics1.p.rapidapi.com/album/appearances/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/recommendations/"
        ],
        "api_list": [
            "GET_album_appearances",
            "GET_artist_albums",
            "GET_song_recommendations",
            "GET_multi_search",
            "GET_user_details",
            "GET_chart_artists",
            "GET_user_contributions_transcriptions",
            "GET_artist_details",
            "GET_chart_albums",
            "GET_annotation_versions",
            "GET_videos",
            "GET_song_details",
            "GET_annotation_details",
            "GET_search",
            "GET_song_comments",
            "GET_user_contributions",
            "GET_user_contributions_unreviewed_annotations",
            "GET_song_lyrics",
            "GET_user_contributions_qa",
            "GET_album_details"
        ]
    },
    {
        "qid": "q30",
        "query": "What is the name of Ed Sheeran's most popular song? How many comments has this song received? Among the top ten songs in the recommended list about this song, what is the name of the song with the most comments?",
        "solution": [
            "GET_multi_search",
            "GET_artist_songs",
            "GET_song_details",
            "GET_song_recommendations"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/multi/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/songs/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/recommendations/"
        ],
        "api_list": [
            "GET_song_recommendations",
            "GET_song_details",
            "GET_artist_songs",
            "GET_multi_search",
            "GET_user_details",
            "GET_user_contributions_unreviewed_annotations",
            "GET_annotation_details",
            "GET_song_lyrics",
            "GET_user_contributions",
            "GET_artist_activity",
            "GET_leaderboard",
            "GET_song_comments",
            "GET_search",
            "GET_annotation_versions",
            "GET_user_contributions_articles",
            "GET_album_comments",
            "GET_user_contributions_annotations",
            "GET_videos",
            "GET_artist_leaderboard",
            "GET_artist_details"
        ]
    },
    {
        "qid": "q32",
        "query": "Who is the user who posted the latest comment on the song 'Thinking Out Loud'? How many people does he/she follow? Among the top 10 users in his/her following list, what is the name of the user with the highest contribution score?",
        "solution": [
            "GET_search",
            "GET_song_comments",
            "GET_user_details",
            "GET_user_following"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/comments/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/following/"
        ],
        "api_list": [
            "GET_user_following",
            "GET_song_comments",
            "GET_search",
            "GET_user_details",
            "GET_chart_artists",
            "GET_user_contributions_unreviewed_annotations",
            "GET_leaderboard",
            "GET_song_recommendations",
            "GET_videos",
            "GET_song_details",
            "GET_user_contributions_articles",
            "GET_album_comments",
            "GET_artist_details",
            "GET_referents",
            "GET_artist_songs",
            "GET_artist_leaderboard",
            "GET_user_contributions",
            "GET_album_appearances",
            "GET_annotation_versions",
            "GET_artist_albums"
        ]
    },
    {
        "qid": "q34",
        "query": "How many comments has the album 'Folklore' received? Who is the user who posted the first comment? Is he/she a verified user? If yes, what is the name of the first user in his/her follower list?",
        "solution": [
            "GET_multi_search",
            "GET_album_comments",
            "GET_user_details",
            "GET_user_followers"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/multi/",
            "https://genius-song-lyrics1.p.rapidapi.com/album/comments/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/details/",
            "https://genius-song-lyrics1.p.rapidapi.com/user/followers/"
        ],
        "api_list": [
            "GET_album_comments",
            "GET_user_followers",
            "GET_multi_search",
            "GET_user_details",
            "GET_artist_albums",
            "GET_song_recommendations",
            "GET_referents",
            "GET_album_appearances",
            "GET_annotation_details",
            "GET_song_details",
            "GET_user_contributions_transcriptions",
            "GET_search",
            "GET_annotation_versions",
            "GET_artist_leaderboard",
            "GET_artist_songs",
            "GET_user_contributions_annotations",
            "GET_user_contributions_qa",
            "GET_album_details",
            "GET_user_contributions_suggestions",
            "GET_user_contributions"
        ]
    },
    {
        "qid": "q36",
        "query": "How many comments has the song 'everything i wanted' received? What are the lyrics of this song? How many comments has the album this song is on received?",
        "solution": [
            "GET_search",
            "GET_song_comments",
            "GET_song_lyrics",
            "GET_album_details"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/comments/",
            "https://genius-song-lyrics1.p.rapidapi.com/song/lyrics/",
            "https://genius-song-lyrics1.p.rapidapi.com/album/details/"
        ],
        "api_list": [
            "GET_song_lyrics",
            "GET_song_comments",
            "GET_search",
            "GET_album_details",
            "GET_user_contributions",
            "GET_chart_songs",
            "GET_user_followers",
            "GET_referents",
            "GET_annotation_versions",
            "GET_album_appearances",
            "GET_leaderboard",
            "GET_chart_albums",
            "GET_user_details",
            "GET_chart_artists",
            "GET_user_contributions_qa",
            "GET_artist_details",
            "GET_artist_activity",
            "GET_user_contributions_articles",
            "GET_album_comments",
            "GET_annotation_details"
        ]
    },
    {
        "qid": "q38",
        "query": "What is the first song on the album 'Sweetener'? Please list the authors of this song, and among these authors, who has the highest contribution score?",
        "solution": [
            "GET_multi_search",
            "GET_album_appearances",
            "GET_artist_details"
        ],
        "dataset": "music",
        "url": [
            "https://genius-song-lyrics1.p.rapidapi.com/search/multi/",
            "https://genius-song-lyrics1.p.rapidapi.com/album/appearances/",
            "https://genius-song-lyrics1.p.rapidapi.com/artist/details/"
        ],
        "api_list": [
            "GET_album_appearances",
            "GET_artist_details",
            "GET_multi_search",
            "GET_leaderboard",
            "GET_user_contributions_transcriptions",
            "GET_artist_albums",
            "GET_user_details",
            "GET_annotation_versions",
            "GET_album_details",
            "GET_user_contributions_annotations",
            "GET_song_details",
            "GET_chart_albums",
            "GET_annotation_details",
            "GET_user_contributions_articles",
            "GET_user_following",
            "GET_song_recommendations",
            "GET_artist_leaderboard",
            "GET_user_contributions_unreviewed_annotations",
            "GET_user_contributions_qa",
            "GET_chart_songs"
        ]
    },
    {
        "query": "Which of the following movies was released first: \"Alienoid,\" \"Road House,\" or \"Kung Fu Panda 4\"? What was the budget for that movie?",
        "solution": [
            [
                "GET_search_movie",
                3
            ],
            [
                "GET_movie_movie_id",
                3
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/movie",
            "https://api.themoviedb.org/3/movie/{movie_id}"
        ],
        "api_list": [
            {
                "description": "Get the TV network logos by id.\n\nThere are two image formats that are supported for networks, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/network/{network_id}/images",
                "method": "GET",
                "api_name": "GET_network_network_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for collections.",
                "url": "https://api.themoviedb.org/3/search/collection",
                "method": "GET",
                "api_name": "GET_search_collection",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the credits (cast, crew and guest stars) for a TV episode.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for a TV show.",
                "url": "https://api.themoviedb.org/3/search/tv",
                "method": "GET",
                "api_name": "GET_search_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The first air data year.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the images for a person.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/images",
                "method": "GET",
                "api_name": "GET_person_person_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV season.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the keywords that have been added to a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/keywords",
                "method": "GET",
                "api_name": "GET_tv_tv_id_keywords",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary information about a movie.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}",
                "method": "GET",
                "api_name": "GET_movie_movie_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "append_to_response",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Append requests within the same namespace to the response.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the details of a network.",
                "url": "https://api.themoviedb.org/3/network/{network_id}",
                "method": "GET",
                "api_name": "GET_network_network_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the user reviews for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/reviews",
                "method": "GET",
                "api_name": "GET_movie_movie_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of popular people on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/person/popular",
                "method": "GET",
                "api_name": "GET_person_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get a list of shows that are currently on the air.\n\nThis query looks for any TV show that has an episode with an air date in the next 7 days.",
                "url": "https://api.themoviedb.org/3/tv/on_the_air",
                "method": "GET",
                "api_name": "GET_tv_on_the_air",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Search for movies.",
                "url": "https://api.themoviedb.org/3/search/movie",
                "method": "GET",
                "api_name": "GET_search_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "the primary release year",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for TV shows.",
                "url": "https://api.themoviedb.org/3/genre/tv/list",
                "method": "GET",
                "api_name": "GET_genre_tv_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the images that belong to a TV show.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular movies on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/movie/popular",
                "method": "GET",
                "api_name": "GET_movie_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the movie credits for a person, the results contains various information such as popularity and release date.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/movie_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_movie_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the keywords that have been added to a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/keywords",
                "method": "GET",
                "api_name": "GET_movie_movie_id_keywords",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "30"
    },
    {
        "query": "What movies has actor Dan Stevens appeared in, and who directed the one with the highest budget among them?",
        "solution": [
            [
                "GET_search_person",
                1
            ],
            [
                "GET_person_person_id_movie_credits",
                1
            ],
            [
                "GET_movie_movie_id",
                37
            ],
            [
                "GET_movie_movie_id_credits",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/person",
            "https://api.themoviedb.org/3/person/{person_id}/movie_credits",
            "https://api.themoviedb.org/3/movie/{movie_id}",
            "https://api.themoviedb.org/3/movie/{movie_id}/credits"
        ],
        "api_list": [
            {
                "description": "Get a list of upcoming movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\n\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.",
                "url": "https://api.themoviedb.org/3/movie/upcoming",
                "method": "GET",
                "api_name": "GET_movie_upcoming",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get a companies details by id.",
                "url": "https://api.themoviedb.org/3/company/{company_id}",
                "method": "GET",
                "api_name": "GET_company_company_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "company_id",
                        "description": "the company id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a collection by id.",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}/images",
                "method": "GET",
                "api_name": "GET_collection_collection_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover TV shows by different types of data like average rating, number of votes, genres, the network they aired on and air dates.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/tv",
                "method": "GET",
                "api_name": "GET_discover_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "vote_average.desc",
                                "vote_average.asc",
                                "first_air_date.desc",
                                "first_air_date.asc",
                                "popularity.desc",
                                "popularity.asc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is greater or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is less than or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows that have a original air date year that equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "America/New_York"
                        },
                        "description": "Used in conjunction with the air_date.gte/lte filter to calculate the proper UTC offset.",
                        "type": "string"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_networks",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of network ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is greater than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "include_null_first_air_dates",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Use this filter to include TV shows that don't have an air date while using any of the \"first_air_date\" filters.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "screened_theatrically",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results to include items that have been screened theatrically.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes TV shows that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "with_status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        },
                        "description": "Filter TV shows by their status.\n\nReturning Series: 0\nPlanned: 1\nIn Production: 2\nEnded: 3\nCancelled: 4\nPilot: 5",
                        "type": "string"
                    },
                    {
                        "name": "with_type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        },
                        "description": "Filter TV shows by their type.\n\nDocumentary: 0\nNews: 1\nMiniseries: 2\nReality: 3\nScripted: 4\nTalk Show: 5\nVideo: 6",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the details of a network.",
                "url": "https://api.themoviedb.org/3/network/{network_id}",
                "method": "GET",
                "api_name": "GET_network_network_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for a TV show.",
                "url": "https://api.themoviedb.org/3/search/tv",
                "method": "GET",
                "api_name": "GET_search_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The first air data year.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the primary information about a movie.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}",
                "method": "GET",
                "api_name": "GET_movie_movie_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "append_to_response",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Append requests within the same namespace to the response.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the keywords that have been added to a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/keywords",
                "method": "GET",
                "api_name": "GET_movie_movie_id_keywords",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a companies logos by id.\n\nThere are two image formats that are supported for companies, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/company/{company_id}/images",
                "method": "GET",
                "api_name": "GET_company_company_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "company_id",
                        "description": "the company id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get collection details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| March 16, 2018 | Added the [translations](#endpoint:bhcsxEgRvyk3N7FnD) method. |",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}",
                "method": "GET",
                "api_name": "GET_collection_collection_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for collections.",
                "url": "https://api.themoviedb.org/3/search/collection",
                "method": "GET",
                "api_name": "GET_search_collection",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for TV shows.",
                "url": "https://api.themoviedb.org/3/genre/tv/list",
                "method": "GET",
                "api_name": "GET_genre_tv_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular movies on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/movie/popular",
                "method": "GET",
                "api_name": "GET_movie_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV season.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV network logos by id.\n\nThere are two image formats that are supported for networks, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/network/{network_id}/images",
                "method": "GET",
                "api_name": "GET_network_network_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for people.",
                "url": "https://api.themoviedb.org/3/search/person",
                "method": "GET",
                "api_name": "GET_search_person",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular TV shows on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/tv/popular",
                "method": "GET",
                "api_name": "GET_tv_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get a list of similar movies. This is **not** the same as the \"Recommendation\" system you see on the website.\n\nThese items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/similar",
                "method": "GET",
                "api_name": "GET_movie_movie_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "26"
    },
    {
        "query": "For the current list of popular movies, identify the genre and rating of the top 10 films, and determine which genre is currently the most popular.",
        "solution": [
            [
                "GET_movie_popular",
                1
            ],
            [
                "GET_movie_movie_id",
                10
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/movie/popular",
            "https://api.themoviedb.org/3/movie/{movie_id}"
        ],
        "api_list": [
            {
                "description": "Get the most newly created TV show. This is a live response and will continuously change.",
                "url": "https://api.themoviedb.org/3/tv/latest",
                "method": "GET",
                "api_name": "GET_tv_latest",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get a list of the current popular TV shows on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/tv/popular",
                "method": "GET",
                "api_name": "GET_tv_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV season.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the top rated TV shows on TMDb.",
                "url": "https://api.themoviedb.org/3/tv/top_rated",
                "method": "GET",
                "api_name": "GET_tv_top_rated",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the images for a person.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/images",
                "method": "GET",
                "api_name": "GET_person_person_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the release date along with the certification for a movie.\n\nRelease dates support different types:\n\n1. Premiere\n2. Theatrical (limited)\n3. Theatrical\n4. Digital\n5. Physical\n6. TV",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/release_dates",
                "method": "GET",
                "api_name": "GET_movie_movie_id_release_dates",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover TV shows by different types of data like average rating, number of votes, genres, the network they aired on and air dates.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/tv",
                "method": "GET",
                "api_name": "GET_discover_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "vote_average.desc",
                                "vote_average.asc",
                                "first_air_date.desc",
                                "first_air_date.asc",
                                "popularity.desc",
                                "popularity.asc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is greater or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is less than or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows that have a original air date year that equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "America/New_York"
                        },
                        "description": "Used in conjunction with the air_date.gte/lte filter to calculate the proper UTC offset.",
                        "type": "string"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_networks",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of network ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is greater than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "include_null_first_air_dates",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Use this filter to include TV shows that don't have an air date while using any of the \"first_air_date\" filters.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "screened_theatrically",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results to include items that have been screened theatrically.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes TV shows that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "with_status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        },
                        "description": "Filter TV shows by their status.\n\nReturning Series: 0\nPlanned: 1\nIn Production: 2\nEnded: 3\nCancelled: 4\nPilot: 5",
                        "type": "string"
                    },
                    {
                        "name": "with_type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        },
                        "description": "Filter TV shows by their type.\n\nDocumentary: 0\nNews: 1\nMiniseries: 2\nReality: 3\nScripted: 4\nTalk Show: 5\nVideo: 6",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the keywords that have been added to a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/keywords",
                "method": "GET",
                "api_name": "GET_tv_tv_id_keywords",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for TV shows.",
                "url": "https://api.themoviedb.org/3/genre/tv/list",
                "method": "GET",
                "api_name": "GET_genre_tv_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the cast and crew for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/credits",
                "method": "GET",
                "api_name": "GET_movie_movie_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a movie.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/images",
                "method": "GET",
                "api_name": "GET_movie_movie_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "include_image_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The inlcuded image language.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary information about a movie.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}",
                "method": "GET",
                "api_name": "GET_movie_movie_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "append_to_response",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Append requests within the same namespace to the response.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular movies on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/movie/popular",
                "method": "GET",
                "api_name": "GET_movie_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get a list of similar TV shows. These items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/similar",
                "method": "GET",
                "api_name": "GET_tv_tv_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of TV show recommendations for this item.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/recommendations",
                "method": "GET",
                "api_name": "GET_tv_tv_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the credits (cast, crew and guest stars) for a TV episode.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a companies logos by id.\n\nThere are two image formats that are supported for companies, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/company/{company_id}/images",
                "method": "GET",
                "api_name": "GET_company_company_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "company_id",
                        "description": "the company id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of upcoming movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\n\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.",
                "url": "https://api.themoviedb.org/3/movie/upcoming",
                "method": "GET",
                "api_name": "GET_movie_upcoming",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "11"
    },
    {
        "query": "Compare the number of works performed by Alan Tudyk, Dan Stevens, Miyoshi Yuzukaaa, Supaporn Malisorn, and Hannah Love Lanier. Among these actors, which country does the actor with the most works come from?",
        "solution": [
            [
                "GET_search_person",
                5
            ],
            [
                "GET_person_person_id",
                4
            ],
            [
                "GET_person_person_id_movie_credits",
                4
            ],
            [
                "GET_person_person_id_tv_credits",
                4
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/person",
            "https://api.themoviedb.org/3/person/{person_id}",
            "https://api.themoviedb.org/3/person/{person_id}/movie_credits",
            "https://api.themoviedb.org/3/person/{person_id}/tv_credits"
        ],
        "api_list": [
            {
                "description": "Search for a TV show.",
                "url": "https://api.themoviedb.org/3/search/tv",
                "method": "GET",
                "api_name": "GET_search_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The first air data year.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the review for a movie",
                "url": "https://api.themoviedb.org/3/review/{review_id}",
                "method": "GET",
                "api_name": "GET_review_review_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "review_id",
                        "description": "the review id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the top rated TV shows on TMDb.",
                "url": "https://api.themoviedb.org/3/tv/top_rated",
                "method": "GET",
                "api_name": "GET_tv_top_rated",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the movie credits for a person, the results contains various information such as popularity and release date.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/movie_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_movie_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a collection by id.",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}/images",
                "method": "GET",
                "api_name": "GET_collection_collection_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a person.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/images",
                "method": "GET",
                "api_name": "GET_person_person_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary person details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 17, 2018 | Added the `known_for_department` field. |\n| April 26, 2018 | Added the [translations](#endpoint:CSaMjCxXAtGpxNGfS) method. |\n| November 9, 2016 | Biographies are now translatable on TMDb. This means you can query person details with a language parameter. |",
                "url": "https://api.themoviedb.org/3/person/{person_id}",
                "method": "GET",
                "api_name": "GET_person_person_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the credits for TV season.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the TV show credits for a person.\n\nYou can query for some extra details about the credit with the [credit method](#endpoint:xPWdEBLkvCNZSicLN).",
                "url": "https://api.themoviedb.org/3/person/{person_id}/tv_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_tv_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of upcoming movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\n\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.",
                "url": "https://api.themoviedb.org/3/movie/upcoming",
                "method": "GET",
                "api_name": "GET_movie_upcoming",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the list of popular people on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/person/popular",
                "method": "GET",
                "api_name": "GET_person_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the credits (cast, crew and guest stars) for a TV episode.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the cast and crew for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/credits",
                "method": "GET",
                "api_name": "GET_movie_movie_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV season.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the keywords that have been added to a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/keywords",
                "method": "GET",
                "api_name": "GET_tv_tv_id_keywords",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV network logos by id.\n\nThere are two image formats that are supported for networks, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/network/{network_id}/images",
                "method": "GET",
                "api_name": "GET_network_network_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a movie.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/images",
                "method": "GET",
                "api_name": "GET_movie_movie_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "include_image_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The inlcuded image language.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the top rated movies on TMDb.",
                "url": "https://api.themoviedb.org/3/movie/top_rated",
                "method": "GET",
                "api_name": "GET_movie_top_rated",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Search for people.",
                "url": "https://api.themoviedb.org/3/search/person",
                "method": "GET",
                "api_name": "GET_search_person",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "1"
    },
    {
        "query": "How many 'One Piece' movies are there in total, and who directed each of them?",
        "solution": [
            [
                "GET_search_movie",
                1
            ],
            [
                "GET_movie_movie_id_credits",
                20
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/movie",
            "https://api.themoviedb.org/3/movie/{movie_id}/credits"
        ],
        "api_list": [
            {
                "description": "Search for movies.",
                "url": "https://api.themoviedb.org/3/search/movie",
                "method": "GET",
                "api_name": "GET_search_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "the primary release year",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the review for a movie",
                "url": "https://api.themoviedb.org/3/review/{review_id}",
                "method": "GET",
                "api_name": "GET_review_review_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "review_id",
                        "description": "the review id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of popular people on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/person/popular",
                "method": "GET",
                "api_name": "GET_person_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the most newly created TV show. This is a live response and will continuously change.",
                "url": "https://api.themoviedb.org/3/tv/latest",
                "method": "GET",
                "api_name": "GET_tv_latest",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get a movie or TV credit details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 13, 2018 | Movie credits are now supported. |",
                "url": "https://api.themoviedb.org/3/credit/{credit_id}",
                "method": "GET",
                "api_name": "GET_credit_credit_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "credit_id",
                        "description": "the credit id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of recommended movies for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/recommendations",
                "method": "GET",
                "api_name": "GET_movie_movie_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the details of a network.",
                "url": "https://api.themoviedb.org/3/network/{network_id}",
                "method": "GET",
                "api_name": "GET_network_network_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a companies logos by id.\n\nThere are two image formats that are supported for companies, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/company/{company_id}/images",
                "method": "GET",
                "api_name": "GET_company_company_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "company_id",
                        "description": "the company id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV episode details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| June 1, 2018 | Added the [translations](#endpoint:5SFwZar3LkP99QMp7) method. |",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a person.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/images",
                "method": "GET",
                "api_name": "GET_person_person_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get collection details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| March 16, 2018 | Added the [translations](#endpoint:bhcsxEgRvyk3N7FnD) method. |",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}",
                "method": "GET",
                "api_name": "GET_collection_collection_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the credits (cast, crew and guest stars) for a TV episode.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for a TV show.",
                "url": "https://api.themoviedb.org/3/search/tv",
                "method": "GET",
                "api_name": "GET_search_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The first air data year.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV season.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of upcoming movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\n\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.",
                "url": "https://api.themoviedb.org/3/movie/upcoming",
                "method": "GET",
                "api_name": "GET_movie_upcoming",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the cast and crew for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/credits",
                "method": "GET",
                "api_name": "GET_movie_movie_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV network logos by id.\n\nThere are two image formats that are supported for networks, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/network/{network_id}/images",
                "method": "GET",
                "api_name": "GET_network_network_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV show.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "27"
    },
    {
        "query": "Which of the following is a Japanese film: \"Better Call Saul,\" \"Chernobyl,\" \"Bluey,\" \"Attack on Titan,\" \"Invincible\"? Please identify the director of that film.",
        "solution": [
            [
                "GET_search_movie",
                4
            ],
            [
                "GET_movie_movie_id_credits",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/movie",
            "https://api.themoviedb.org/3/movie/{movie_id}/credits"
        ],
        "api_list": [
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the release date along with the certification for a movie.\n\nRelease dates support different types:\n\n1. Premiere\n2. Theatrical (limited)\n3. Theatrical\n4. Digital\n5. Physical\n6. TV",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/release_dates",
                "method": "GET",
                "api_name": "GET_movie_movie_id_release_dates",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular TV shows on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/tv/popular",
                "method": "GET",
                "api_name": "GET_tv_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get collection details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| March 16, 2018 | Added the [translations](#endpoint:bhcsxEgRvyk3N7FnD) method. |",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}",
                "method": "GET",
                "api_name": "GET_collection_collection_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the review for a movie",
                "url": "https://api.themoviedb.org/3/review/{review_id}",
                "method": "GET",
                "api_name": "GET_review_review_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "review_id",
                        "description": "the review id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for people.",
                "url": "https://api.themoviedb.org/3/search/person",
                "method": "GET",
                "api_name": "GET_search_person",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the primary person details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 17, 2018 | Added the `known_for_department` field. |\n| April 26, 2018 | Added the [translations](#endpoint:CSaMjCxXAtGpxNGfS) method. |\n| November 9, 2016 | Biographies are now translatable on TMDb. This means you can query person details with a language parameter. |",
                "url": "https://api.themoviedb.org/3/person/{person_id}",
                "method": "GET",
                "api_name": "GET_person_person_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a movie or TV credit details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 13, 2018 | Movie credits are now supported. |",
                "url": "https://api.themoviedb.org/3/credit/{credit_id}",
                "method": "GET",
                "api_name": "GET_credit_credit_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "credit_id",
                        "description": "the credit id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for collections.",
                "url": "https://api.themoviedb.org/3/search/collection",
                "method": "GET",
                "api_name": "GET_search_collection",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the images for a person.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/images",
                "method": "GET",
                "api_name": "GET_person_person_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of TV shows that are airing today. This query is purely day based as we do not currently support airing times.\n\nYou can specify a [timezone](endpoint:KQ4CDdEoWKJYLkrhS) to offset the day calculation. Without a specified timezone, this query defaults to EST (Eastern Time UTC-05:00).",
                "url": "https://api.themoviedb.org/3/tv/airing_today",
                "method": "GET",
                "api_name": "GET_tv_airing_today",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Search for companies.",
                "url": "https://api.themoviedb.org/3/search/company",
                "method": "GET",
                "api_name": "GET_search_company",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get a list of recommended movies for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/recommendations",
                "method": "GET",
                "api_name": "GET_movie_movie_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the details of a network.",
                "url": "https://api.themoviedb.org/3/network/{network_id}",
                "method": "GET",
                "api_name": "GET_network_network_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of upcoming movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\n\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.",
                "url": "https://api.themoviedb.org/3/movie/upcoming",
                "method": "GET",
                "api_name": "GET_movie_upcoming",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the cast and crew for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/credits",
                "method": "GET",
                "api_name": "GET_movie_movie_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the most newly created TV show. This is a live response and will continuously change.",
                "url": "https://api.themoviedb.org/3/tv/latest",
                "method": "GET",
                "api_name": "GET_tv_latest",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the images that belong to a TV show.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the top rated TV shows on TMDb.",
                "url": "https://api.themoviedb.org/3/tv/top_rated",
                "method": "GET",
                "api_name": "GET_tv_top_rated",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "31"
    },
    {
        "query": "Identify 10 popular figures and list their highest-rated movies. Also, provide a biography of the actor with the highest-rated movie among them.",
        "solution": [
            [
                "GET_person_popular",
                1
            ],
            [
                "GET_person_person_id_movie_credits",
                10
            ],
            [
                "GET_person_person_id",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/person/popular",
            "https://api.themoviedb.org/3/person/{person_id}/movie_credits",
            "https://api.themoviedb.org/3/person/{person_id}"
        ],
        "api_list": [
            {
                "description": "Get the images that belong to a TV episode.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the reviews for a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/reviews",
                "method": "GET",
                "api_name": "GET_tv_tv_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a companies logos by id.\n\nThere are two image formats that are supported for companies, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/company/{company_id}/images",
                "method": "GET",
                "api_name": "GET_company_company_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "company_id",
                        "description": "the company id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the user reviews for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/reviews",
                "method": "GET",
                "api_name": "GET_movie_movie_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV show credits for a person.\n\nYou can query for some extra details about the credit with the [credit method](#endpoint:xPWdEBLkvCNZSicLN).",
                "url": "https://api.themoviedb.org/3/person/{person_id}/tv_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_tv_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the top rated TV shows on TMDb.",
                "url": "https://api.themoviedb.org/3/tv/top_rated",
                "method": "GET",
                "api_name": "GET_tv_top_rated",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Search for movies.",
                "url": "https://api.themoviedb.org/3/search/movie",
                "method": "GET",
                "api_name": "GET_search_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "the primary release year",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the TV network logos by id.\n\nThere are two image formats that are supported for networks, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/network/{network_id}/images",
                "method": "GET",
                "api_name": "GET_network_network_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the movie credits for a person, the results contains various information such as popularity and release date.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/movie_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_movie_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of upcoming movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\n\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.",
                "url": "https://api.themoviedb.org/3/movie/upcoming",
                "method": "GET",
                "api_name": "GET_movie_upcoming",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the images for a collection by id.",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}/images",
                "method": "GET",
                "api_name": "GET_collection_collection_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the keywords that have been added to a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/keywords",
                "method": "GET",
                "api_name": "GET_movie_movie_id_keywords",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV show.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a person.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/images",
                "method": "GET",
                "api_name": "GET_person_person_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of TV show recommendations for this item.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/recommendations",
                "method": "GET",
                "api_name": "GET_tv_tv_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of recommended movies for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/recommendations",
                "method": "GET",
                "api_name": "GET_movie_movie_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary person details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 17, 2018 | Added the `known_for_department` field. |\n| April 26, 2018 | Added the [translations](#endpoint:CSaMjCxXAtGpxNGfS) method. |\n| November 9, 2016 | Biographies are now translatable on TMDb. This means you can query person details with a language parameter. |",
                "url": "https://api.themoviedb.org/3/person/{person_id}",
                "method": "GET",
                "api_name": "GET_person_person_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of similar TV shows. These items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/similar",
                "method": "GET",
                "api_name": "GET_tv_tv_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for companies.",
                "url": "https://api.themoviedb.org/3/search/company",
                "method": "GET",
                "api_name": "GET_search_company",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the credits for TV season.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "6"
    },
    {
        "query": "How many movies are named 'Modern Family'? Please find the director of the most popular one and how many movies he has directed in total.",
        "solution": [
            [
                "GET_search_movie",
                1
            ],
            [
                "GET_movie_movie_id_credits",
                1
            ],
            [
                "GET_person_person_id_movie_credits",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/movie",
            "https://api.themoviedb.org/3/movie/{movie_id}/credits",
            "https://api.themoviedb.org/3/person/{person_id}/movie_credits"
        ],
        "api_list": [
            {
                "description": "Get the primary TV show details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 17, 2018 | We now return `last_episode_to_air` and `next_episode_to_air` fields. |\n| March 12, 2018 | Networks return proper logos and we introduced SVG support. |\n| March 8, 2018 | The `seasons` field now returns the translated names and overviews. |",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}",
                "method": "GET",
                "api_name": "GET_tv_tv_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV season.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular movies on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/movie/popular",
                "method": "GET",
                "api_name": "GET_movie_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a movie.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/images",
                "method": "GET",
                "api_name": "GET_movie_movie_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "include_image_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The inlcuded image language.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV show.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the movie credits for a person, the results contains various information such as popularity and release date.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/movie_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_movie_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the credits (cast and crew) that have been added to a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the user reviews for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/reviews",
                "method": "GET",
                "api_name": "GET_movie_movie_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the review for a movie",
                "url": "https://api.themoviedb.org/3/review/{review_id}",
                "method": "GET",
                "api_name": "GET_review_review_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "review_id",
                        "description": "the review id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the credits (cast, crew and guest stars) for a TV episode.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary information about a movie.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}",
                "method": "GET",
                "api_name": "GET_movie_movie_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "append_to_response",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Append requests within the same namespace to the response.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for a TV show.",
                "url": "https://api.themoviedb.org/3/search/tv",
                "method": "GET",
                "api_name": "GET_search_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The first air data year.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the TV network logos by id.\n\nThere are two image formats that are supported for networks, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/network/{network_id}/images",
                "method": "GET",
                "api_name": "GET_network_network_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the top rated TV shows on TMDb.",
                "url": "https://api.themoviedb.org/3/tv/top_rated",
                "method": "GET",
                "api_name": "GET_tv_top_rated",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get a list of upcoming movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\n\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.",
                "url": "https://api.themoviedb.org/3/movie/upcoming",
                "method": "GET",
                "api_name": "GET_movie_upcoming",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the details of a network.",
                "url": "https://api.themoviedb.org/3/network/{network_id}",
                "method": "GET",
                "api_name": "GET_network_network_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for movies.",
                "url": "https://api.themoviedb.org/3/search/movie",
                "method": "GET",
                "api_name": "GET_search_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "the primary release year",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get a list of similar TV shows. These items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/similar",
                "method": "GET",
                "api_name": "GET_tv_tv_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            }
        ],
        "dataset": "tmdb",
        "qid": "16"
    },
    {
        "query": "Has actor Michael Caine appeared in the Batman series of movies, such as \"The Dark Knight Rises\" and \"The Dark Knight\"? What role does he primarily play in the Batman series?",
        "solution": [
            [
                "GET_search_person",
                1
            ],
            [
                "GET_person_person_id_movie_credits",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/person",
            "https://api.themoviedb.org/3/person/{person_id}/movie_credits"
        ],
        "api_list": [
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get a list of similar movies. This is **not** the same as the \"Recommendation\" system you see on the website.\n\nThese items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/similar",
                "method": "GET",
                "api_name": "GET_movie_movie_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a collection by id.",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}/images",
                "method": "GET",
                "api_name": "GET_collection_collection_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a movie or TV credit details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 13, 2018 | Movie credits are now supported. |",
                "url": "https://api.themoviedb.org/3/credit/{credit_id}",
                "method": "GET",
                "api_name": "GET_credit_credit_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "credit_id",
                        "description": "the credit id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the user reviews for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/reviews",
                "method": "GET",
                "api_name": "GET_movie_movie_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV season details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for TV shows.",
                "url": "https://api.themoviedb.org/3/genre/tv/list",
                "method": "GET",
                "api_name": "GET_genre_tv_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the list of popular people on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/person/popular",
                "method": "GET",
                "api_name": "GET_person_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the credits for TV season.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary information about a movie.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}",
                "method": "GET",
                "api_name": "GET_movie_movie_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "append_to_response",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Append requests within the same namespace to the response.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a companies logos by id.\n\nThere are two image formats that are supported for companies, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/company/{company_id}/images",
                "method": "GET",
                "api_name": "GET_company_company_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "company_id",
                        "description": "the company id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the most newly created TV show. This is a live response and will continuously change.",
                "url": "https://api.themoviedb.org/3/tv/latest",
                "method": "GET",
                "api_name": "GET_tv_latest",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the credits (cast and crew) that have been added to a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the keywords that have been added to a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/keywords",
                "method": "GET",
                "api_name": "GET_movie_movie_id_keywords",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary TV show details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 17, 2018 | We now return `last_episode_to_air` and `next_episode_to_air` fields. |\n| March 12, 2018 | Networks return proper logos and we introduced SVG support. |\n| March 8, 2018 | The `seasons` field now returns the translated names and overviews. |",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}",
                "method": "GET",
                "api_name": "GET_tv_tv_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of TV show recommendations for this item.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/recommendations",
                "method": "GET",
                "api_name": "GET_tv_tv_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for people.",
                "url": "https://api.themoviedb.org/3/search/person",
                "method": "GET",
                "api_name": "GET_search_person",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get a list of shows that are currently on the air.\n\nThis query looks for any TV show that has an episode with an air date in the next 7 days.",
                "url": "https://api.themoviedb.org/3/tv/on_the_air",
                "method": "GET",
                "api_name": "GET_tv_on_the_air",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the most newly created movie. This is a live response and will continuously change.",
                "url": "https://api.themoviedb.org/3/movie/latest",
                "method": "GET",
                "api_name": "GET_movie_latest",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Search for collections.",
                "url": "https://api.themoviedb.org/3/search/collection",
                "method": "GET",
                "api_name": "GET_search_collection",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "41"
    },
    {
        "query": "Between the movies \"Land of Bad\" and \"Godzilla vs. Kong,\" which one had a larger budget, and which one was released earlier?",
        "solution": [
            [
                "GET_search_movie",
                2
            ],
            [
                "GET_movie_movie_id",
                2
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/movie",
            "https://api.themoviedb.org/3/movie/{movie_id}"
        ],
        "api_list": [
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a movie.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/images",
                "method": "GET",
                "api_name": "GET_movie_movie_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "include_image_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The inlcuded image language.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover TV shows by different types of data like average rating, number of votes, genres, the network they aired on and air dates.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/tv",
                "method": "GET",
                "api_name": "GET_discover_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "vote_average.desc",
                                "vote_average.asc",
                                "first_air_date.desc",
                                "first_air_date.asc",
                                "popularity.desc",
                                "popularity.asc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is greater or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is less than or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows that have a original air date year that equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "America/New_York"
                        },
                        "description": "Used in conjunction with the air_date.gte/lte filter to calculate the proper UTC offset.",
                        "type": "string"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_networks",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of network ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is greater than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "include_null_first_air_dates",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Use this filter to include TV shows that don't have an air date while using any of the \"first_air_date\" filters.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "screened_theatrically",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results to include items that have been screened theatrically.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes TV shows that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "with_status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        },
                        "description": "Filter TV shows by their status.\n\nReturning Series: 0\nPlanned: 1\nIn Production: 2\nEnded: 3\nCancelled: 4\nPilot: 5",
                        "type": "string"
                    },
                    {
                        "name": "with_type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        },
                        "description": "Filter TV shows by their type.\n\nDocumentary: 0\nNews: 1\nMiniseries: 2\nReality: 3\nScripted: 4\nTalk Show: 5\nVideo: 6",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the TV network logos by id.\n\nThere are two image formats that are supported for networks, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/network/{network_id}/images",
                "method": "GET",
                "api_name": "GET_network_network_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV episode.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\n\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.",
                "url": "https://api.themoviedb.org/3/movie/now_playing",
                "method": "GET",
                "api_name": "GET_movie_now_playing",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Search for movies.",
                "url": "https://api.themoviedb.org/3/search/movie",
                "method": "GET",
                "api_name": "GET_search_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "the primary release year",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the top rated movies on TMDb.",
                "url": "https://api.themoviedb.org/3/movie/top_rated",
                "method": "GET",
                "api_name": "GET_movie_top_rated",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Search for people.",
                "url": "https://api.themoviedb.org/3/search/person",
                "method": "GET",
                "api_name": "GET_search_person",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV show.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a collection by id.",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}/images",
                "method": "GET",
                "api_name": "GET_collection_collection_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV season.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the details of a network.",
                "url": "https://api.themoviedb.org/3/network/{network_id}",
                "method": "GET",
                "api_name": "GET_network_network_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a person.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/images",
                "method": "GET",
                "api_name": "GET_person_person_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular TV shows on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/tv/popular",
                "method": "GET",
                "api_name": "GET_tv_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the TV season details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the most newly created movie. This is a live response and will continuously change.",
                "url": "https://api.themoviedb.org/3/movie/latest",
                "method": "GET",
                "api_name": "GET_movie_latest",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the primary information about a movie.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}",
                "method": "GET",
                "api_name": "GET_movie_movie_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "append_to_response",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Append requests within the same namespace to the response.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of TV show recommendations for this item.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/recommendations",
                "method": "GET",
                "api_name": "GET_tv_tv_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "36"
    },
    {
        "query": "Who directed the highest-rated action movie broadcast today? Please recommend some similar action movies to me.",
        "solution": [
            [
                "GET_genre_movie_list",
                1
            ],
            [
                "GET_movie_now_playing",
                1
            ],
            [
                "GET_movie_movie_id_credits",
                1
            ],
            [
                "GET_movie_movie_id_recommendations",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/genre/movie/list",
            "https://api.themoviedb.org/3/movie/now_playing",
            "https://api.themoviedb.org/3/movie/{movie_id}/credits",
            "https://api.themoviedb.org/3/movie/{movie_id}/recommendations"
        ],
        "api_list": [
            {
                "description": "Get the cast and crew for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/credits",
                "method": "GET",
                "api_name": "GET_movie_movie_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for movies.",
                "url": "https://api.themoviedb.org/3/search/movie",
                "method": "GET",
                "api_name": "GET_search_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "the primary release year",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the most newly created movie. This is a live response and will continuously change.",
                "url": "https://api.themoviedb.org/3/movie/latest",
                "method": "GET",
                "api_name": "GET_movie_latest",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the TV season details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV show.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of recommended movies for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/recommendations",
                "method": "GET",
                "api_name": "GET_movie_movie_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV episode.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a person.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/images",
                "method": "GET",
                "api_name": "GET_person_person_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a companies logos by id.\n\nThere are two image formats that are supported for companies, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/company/{company_id}/images",
                "method": "GET",
                "api_name": "GET_company_company_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "company_id",
                        "description": "the company id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular movies on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/movie/popular",
                "method": "GET",
                "api_name": "GET_movie_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for TV shows.",
                "url": "https://api.themoviedb.org/3/genre/tv/list",
                "method": "GET",
                "api_name": "GET_genre_tv_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the credits (cast and crew) that have been added to a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the list of TV show recommendations for this item.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/recommendations",
                "method": "GET",
                "api_name": "GET_tv_tv_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary person details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 17, 2018 | Added the `known_for_department` field. |\n| April 26, 2018 | Added the [translations](#endpoint:CSaMjCxXAtGpxNGfS) method. |\n| November 9, 2016 | Biographies are now translatable on TMDb. This means you can query person details with a language parameter. |",
                "url": "https://api.themoviedb.org/3/person/{person_id}",
                "method": "GET",
                "api_name": "GET_person_person_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get collection details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| March 16, 2018 | Added the [translations](#endpoint:bhcsxEgRvyk3N7FnD) method. |",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}",
                "method": "GET",
                "api_name": "GET_collection_collection_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover TV shows by different types of data like average rating, number of votes, genres, the network they aired on and air dates.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/tv",
                "method": "GET",
                "api_name": "GET_discover_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "vote_average.desc",
                                "vote_average.asc",
                                "first_air_date.desc",
                                "first_air_date.asc",
                                "popularity.desc",
                                "popularity.asc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is greater or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is less than or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows that have a original air date year that equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "America/New_York"
                        },
                        "description": "Used in conjunction with the air_date.gte/lte filter to calculate the proper UTC offset.",
                        "type": "string"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_networks",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of network ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is greater than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "include_null_first_air_dates",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Use this filter to include TV shows that don't have an air date while using any of the \"first_air_date\" filters.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "screened_theatrically",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results to include items that have been screened theatrically.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes TV shows that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "with_status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        },
                        "description": "Filter TV shows by their status.\n\nReturning Series: 0\nPlanned: 1\nIn Production: 2\nEnded: 3\nCancelled: 4\nPilot: 5",
                        "type": "string"
                    },
                    {
                        "name": "with_type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        },
                        "description": "Filter TV shows by their type.\n\nDocumentary: 0\nNews: 1\nMiniseries: 2\nReality: 3\nScripted: 4\nTalk Show: 5\nVideo: 6",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get a list of movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\n\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.",
                "url": "https://api.themoviedb.org/3/movie/now_playing",
                "method": "GET",
                "api_name": "GET_movie_now_playing",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV season.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "20"
    },
    {
        "query": "What genre is the highest-rated movie released in 2022? Has the director of this movie directed other movies of the same genre?",
        "solution": [
            [
                "GET_genre_movie_list",
                1
            ],
            [
                "GET_discover_movie",
                1
            ],
            [
                "GET_movie_movie_id_credits",
                1
            ],
            [
                "GET_person_person_id_movie_credits",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/genre/movie/list",
            "https://api.themoviedb.org/3/discover/movie",
            "https://api.themoviedb.org/3/movie/{movie_id}/credits",
            "https://api.themoviedb.org/3/person/{person_id}/movie_credits"
        ],
        "api_list": [
            {
                "description": "Get the TV season details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a collection by id.",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}/images",
                "method": "GET",
                "api_name": "GET_collection_collection_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the review for a movie",
                "url": "https://api.themoviedb.org/3/review/{review_id}",
                "method": "GET",
                "api_name": "GET_review_review_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "review_id",
                        "description": "the review id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary information about a movie.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}",
                "method": "GET",
                "api_name": "GET_movie_movie_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "append_to_response",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Append requests within the same namespace to the response.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of TV shows that are airing today. This query is purely day based as we do not currently support airing times.\n\nYou can specify a [timezone](endpoint:KQ4CDdEoWKJYLkrhS) to offset the day calculation. Without a specified timezone, this query defaults to EST (Eastern Time UTC-05:00).",
                "url": "https://api.themoviedb.org/3/tv/airing_today",
                "method": "GET",
                "api_name": "GET_tv_airing_today",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the top rated movies on TMDb.",
                "url": "https://api.themoviedb.org/3/movie/top_rated",
                "method": "GET",
                "api_name": "GET_movie_top_rated",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get a list of similar TV shows. These items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/similar",
                "method": "GET",
                "api_name": "GET_tv_tv_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the primary person details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 17, 2018 | Added the `known_for_department` field. |\n| April 26, 2018 | Added the [translations](#endpoint:CSaMjCxXAtGpxNGfS) method. |\n| November 9, 2016 | Biographies are now translatable on TMDb. This means you can query person details with a language parameter. |",
                "url": "https://api.themoviedb.org/3/person/{person_id}",
                "method": "GET",
                "api_name": "GET_person_person_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the reviews for a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/reviews",
                "method": "GET",
                "api_name": "GET_tv_tv_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV episode details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| June 1, 2018 | Added the [translations](#endpoint:5SFwZar3LkP99QMp7) method. |",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary TV show details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 17, 2018 | We now return `last_episode_to_air` and `next_episode_to_air` fields. |\n| March 12, 2018 | Networks return proper logos and we introduced SVG support. |\n| March 8, 2018 | The `seasons` field now returns the translated names and overviews. |",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}",
                "method": "GET",
                "api_name": "GET_tv_tv_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV show credits for a person.\n\nYou can query for some extra details about the credit with the [credit method](#endpoint:xPWdEBLkvCNZSicLN).",
                "url": "https://api.themoviedb.org/3/person/{person_id}/tv_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_tv_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the movie credits for a person, the results contains various information such as popularity and release date.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/movie_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_movie_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for TV shows.",
                "url": "https://api.themoviedb.org/3/genre/tv/list",
                "method": "GET",
                "api_name": "GET_genre_tv_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Search for movies.",
                "url": "https://api.themoviedb.org/3/search/movie",
                "method": "GET",
                "api_name": "GET_search_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "the primary release year",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a movie.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/images",
                "method": "GET",
                "api_name": "GET_movie_movie_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "include_image_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The inlcuded image language.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of shows that are currently on the air.\n\nThis query looks for any TV show that has an episode with an air date in the next 7 days.",
                "url": "https://api.themoviedb.org/3/tv/on_the_air",
                "method": "GET",
                "api_name": "GET_tv_on_the_air",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV show.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the cast and crew for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/credits",
                "method": "GET",
                "api_name": "GET_movie_movie_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "21"
    },
    {
        "query": "What are the keywords and reviews for the movie \"Godzilla Minus One\"? Did Minami Hamabe participate in the production of this movie? If so, what was her main role?",
        "solution": [
            [
                "GET_search_movie",
                1
            ],
            [
                "GET_movie_movie_id_keywords",
                1
            ],
            [
                "GET_movie_movie_id_reviews",
                1
            ],
            [
                "GET_movie_movie_id_credits",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/movie",
            "https://api.themoviedb.org/3/movie/{movie_id}/keywords",
            "https://api.themoviedb.org/3/movie/{movie_id}/reviews",
            "https://api.themoviedb.org/3/movie/{movie_id}/credits"
        ],
        "api_list": [
            {
                "description": "Get the release date along with the certification for a movie.\n\nRelease dates support different types:\n\n1. Premiere\n2. Theatrical (limited)\n3. Theatrical\n4. Digital\n5. Physical\n6. TV",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/release_dates",
                "method": "GET",
                "api_name": "GET_movie_movie_id_release_dates",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the user reviews for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/reviews",
                "method": "GET",
                "api_name": "GET_movie_movie_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the cast and crew for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/credits",
                "method": "GET",
                "api_name": "GET_movie_movie_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV season details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a companies logos by id.\n\nThere are two image formats that are supported for companies, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/company/{company_id}/images",
                "method": "GET",
                "api_name": "GET_company_company_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "company_id",
                        "description": "the company id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover TV shows by different types of data like average rating, number of votes, genres, the network they aired on and air dates.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/tv",
                "method": "GET",
                "api_name": "GET_discover_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "vote_average.desc",
                                "vote_average.asc",
                                "first_air_date.desc",
                                "first_air_date.asc",
                                "popularity.desc",
                                "popularity.asc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is greater or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is less than or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows that have a original air date year that equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "America/New_York"
                        },
                        "description": "Used in conjunction with the air_date.gte/lte filter to calculate the proper UTC offset.",
                        "type": "string"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_networks",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of network ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is greater than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "include_null_first_air_dates",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Use this filter to include TV shows that don't have an air date while using any of the \"first_air_date\" filters.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "screened_theatrically",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results to include items that have been screened theatrically.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes TV shows that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "with_status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        },
                        "description": "Filter TV shows by their status.\n\nReturning Series: 0\nPlanned: 1\nIn Production: 2\nEnded: 3\nCancelled: 4\nPilot: 5",
                        "type": "string"
                    },
                    {
                        "name": "with_type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        },
                        "description": "Filter TV shows by their type.\n\nDocumentary: 0\nNews: 1\nMiniseries: 2\nReality: 3\nScripted: 4\nTalk Show: 5\nVideo: 6",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the reviews for a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/reviews",
                "method": "GET",
                "api_name": "GET_tv_tv_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get collection details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| March 16, 2018 | Added the [translations](#endpoint:bhcsxEgRvyk3N7FnD) method. |",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}",
                "method": "GET",
                "api_name": "GET_collection_collection_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for movies.",
                "url": "https://api.themoviedb.org/3/search/movie",
                "method": "GET",
                "api_name": "GET_search_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "the primary release year",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV episode.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the details of a network.",
                "url": "https://api.themoviedb.org/3/network/{network_id}",
                "method": "GET",
                "api_name": "GET_network_network_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for people.",
                "url": "https://api.themoviedb.org/3/search/person",
                "method": "GET",
                "api_name": "GET_search_person",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get a list of similar TV shows. These items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/similar",
                "method": "GET",
                "api_name": "GET_tv_tv_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of popular people on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/person/popular",
                "method": "GET",
                "api_name": "GET_person_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the images for a person.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/images",
                "method": "GET",
                "api_name": "GET_person_person_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the review for a movie",
                "url": "https://api.themoviedb.org/3/review/{review_id}",
                "method": "GET",
                "api_name": "GET_review_review_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "review_id",
                        "description": "the review id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover movies by different types of data like average rating, number of votes, genres and certifications. You can get a valid list of certifications from the [certifications list](#endpoint:faFKjuKG2HnwexAWM) method.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nPlease note, when using `certification` \\ `certification.lte` you must also specify `certification_country`. These two parameters work together in order to filter the results. You can only filter results with the countries we have added to our [certifications list](#endpoint:faFKjuKG2HnwexAWM).\n\nIf you specify the `region` parameter, the regional release date will be used instead of the primary release date. The date returned will be the first date based on your query (ie. if a `with_release_type` is specified). It's important to note the order of the release types that are used. Specifying \"2|3\" would return the limited theatrical release date as opposed to \"3|2\" which would return the theatrical date.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/movie",
                "method": "GET",
                "api_name": "GET_discover_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "popularity.asc",
                                "popularity.desc",
                                "release_date.asc",
                                "release_date.desc",
                                "revenue.asc",
                                "revenue.desc",
                                "primary_release_date.asc",
                                "primary_release_date.desc",
                                "original_title.asc",
                                "original_title.desc",
                                "vote_average.asc",
                                "vote_average.desc",
                                "vote_count.asc",
                                "vote_count.desc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "certification_country",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Used in conjunction with the certification filter, use this to specify a country with a valid certification.",
                        "type": "string"
                    },
                    {
                        "name": "certification",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results with a valid certification from the 'certification_country' field.",
                        "type": "string"
                    },
                    {
                        "name": "certification.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a certification that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "certification.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a certification that is greater than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "A filter and include or exclude adult movies.",
                        "type": "boolean"
                    },
                    {
                        "name": "include_video",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "A filter to include or exclude videos.",
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A filter to limit the results to a specific primary release year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a primary release date that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "primary_release_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a primary release date that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "release_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a release date (looking at all release dates) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "release_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a release date (looking at all release dates) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "with_release_type",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Specify a comma (AND) or pipe (OR) separated value to filter release types by. These release types map to the same values found on the movie release date method.",
                        "type": "integer"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A filter to limit the results to a specific year (looking at all release dates).",
                        "type": "integer"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a vote count that is greater or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "vote_count.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a vote count that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_average.lte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "with_cast",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of person ID's. Only include movies that have one of the ID's added as an actor.",
                        "type": "string"
                    },
                    {
                        "name": "with_crew",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of person ID's. Only include movies that have one of the ID's added as a crew member.",
                        "type": "string"
                    },
                    {
                        "name": "with_people",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of person ID's. Only include movies that have one of the ID's added as a either a actor or a crew member.",
                        "type": "string"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes movies that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a runtime that is greater or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the most newly created movie. This is a live response and will continuously change.",
                "url": "https://api.themoviedb.org/3/movie/latest",
                "method": "GET",
                "api_name": "GET_movie_latest",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the keywords that have been added to a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/keywords",
                "method": "GET",
                "api_name": "GET_movie_movie_id_keywords",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "37"
    },
    {
        "query": "Which actor among Alexandra Daddario, Willem Dafoe, and Anne Hathaway has appeared in the movie \"Interstellar\"? What role did this actor play in \"Interstellar\"?",
        "solution": [
            [
                "GET_search_movie",
                1
            ],
            [
                "GET_movie_movie_id_credits",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/movie",
            "https://api.themoviedb.org/3/movie/{movie_id}/credits"
        ],
        "api_list": [
            {
                "description": "Get the movie credits for a person, the results contains various information such as popularity and release date.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/movie_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_movie_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the most newly created movie. This is a live response and will continuously change.",
                "url": "https://api.themoviedb.org/3/movie/latest",
                "method": "GET",
                "api_name": "GET_movie_latest",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the credits for TV season.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover movies by different types of data like average rating, number of votes, genres and certifications. You can get a valid list of certifications from the [certifications list](#endpoint:faFKjuKG2HnwexAWM) method.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nPlease note, when using `certification` \\ `certification.lte` you must also specify `certification_country`. These two parameters work together in order to filter the results. You can only filter results with the countries we have added to our [certifications list](#endpoint:faFKjuKG2HnwexAWM).\n\nIf you specify the `region` parameter, the regional release date will be used instead of the primary release date. The date returned will be the first date based on your query (ie. if a `with_release_type` is specified). It's important to note the order of the release types that are used. Specifying \"2|3\" would return the limited theatrical release date as opposed to \"3|2\" which would return the theatrical date.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/movie",
                "method": "GET",
                "api_name": "GET_discover_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "popularity.asc",
                                "popularity.desc",
                                "release_date.asc",
                                "release_date.desc",
                                "revenue.asc",
                                "revenue.desc",
                                "primary_release_date.asc",
                                "primary_release_date.desc",
                                "original_title.asc",
                                "original_title.desc",
                                "vote_average.asc",
                                "vote_average.desc",
                                "vote_count.asc",
                                "vote_count.desc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "certification_country",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Used in conjunction with the certification filter, use this to specify a country with a valid certification.",
                        "type": "string"
                    },
                    {
                        "name": "certification",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results with a valid certification from the 'certification_country' field.",
                        "type": "string"
                    },
                    {
                        "name": "certification.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a certification that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "certification.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a certification that is greater than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "A filter and include or exclude adult movies.",
                        "type": "boolean"
                    },
                    {
                        "name": "include_video",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "A filter to include or exclude videos.",
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A filter to limit the results to a specific primary release year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a primary release date that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "primary_release_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a primary release date that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "release_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a release date (looking at all release dates) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "release_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a release date (looking at all release dates) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "with_release_type",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Specify a comma (AND) or pipe (OR) separated value to filter release types by. These release types map to the same values found on the movie release date method.",
                        "type": "integer"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A filter to limit the results to a specific year (looking at all release dates).",
                        "type": "integer"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a vote count that is greater or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "vote_count.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a vote count that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_average.lte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "with_cast",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of person ID's. Only include movies that have one of the ID's added as an actor.",
                        "type": "string"
                    },
                    {
                        "name": "with_crew",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of person ID's. Only include movies that have one of the ID's added as a crew member.",
                        "type": "string"
                    },
                    {
                        "name": "with_people",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of person ID's. Only include movies that have one of the ID's added as a either a actor or a crew member.",
                        "type": "string"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes movies that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a runtime that is greater or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Search for movies.",
                "url": "https://api.themoviedb.org/3/search/movie",
                "method": "GET",
                "api_name": "GET_search_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "the primary release year",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get a list of movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\n\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.",
                "url": "https://api.themoviedb.org/3/movie/now_playing",
                "method": "GET",
                "api_name": "GET_movie_now_playing",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Search for companies.",
                "url": "https://api.themoviedb.org/3/search/company",
                "method": "GET",
                "api_name": "GET_search_company",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the cast and crew for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/credits",
                "method": "GET",
                "api_name": "GET_movie_movie_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of TV show recommendations for this item.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/recommendations",
                "method": "GET",
                "api_name": "GET_tv_tv_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the keywords that have been added to a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/keywords",
                "method": "GET",
                "api_name": "GET_tv_tv_id_keywords",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the release date along with the certification for a movie.\n\nRelease dates support different types:\n\n1. Premiere\n2. Theatrical (limited)\n3. Theatrical\n4. Digital\n5. Physical\n6. TV",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/release_dates",
                "method": "GET",
                "api_name": "GET_movie_movie_id_release_dates",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular TV shows on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/tv/popular",
                "method": "GET",
                "api_name": "GET_tv_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the TV episode details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| June 1, 2018 | Added the [translations](#endpoint:5SFwZar3LkP99QMp7) method. |",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a movie.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/images",
                "method": "GET",
                "api_name": "GET_movie_movie_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "include_image_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The inlcuded image language.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover TV shows by different types of data like average rating, number of votes, genres, the network they aired on and air dates.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/tv",
                "method": "GET",
                "api_name": "GET_discover_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "vote_average.desc",
                                "vote_average.asc",
                                "first_air_date.desc",
                                "first_air_date.asc",
                                "popularity.desc",
                                "popularity.asc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is greater or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is less than or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows that have a original air date year that equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "America/New_York"
                        },
                        "description": "Used in conjunction with the air_date.gte/lte filter to calculate the proper UTC offset.",
                        "type": "string"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_networks",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of network ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is greater than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "include_null_first_air_dates",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Use this filter to include TV shows that don't have an air date while using any of the \"first_air_date\" filters.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "screened_theatrically",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results to include items that have been screened theatrically.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes TV shows that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "with_status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        },
                        "description": "Filter TV shows by their status.\n\nReturning Series: 0\nPlanned: 1\nIn Production: 2\nEnded: 3\nCancelled: 4\nPilot: 5",
                        "type": "string"
                    },
                    {
                        "name": "with_type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        },
                        "description": "Filter TV shows by their type.\n\nDocumentary: 0\nNews: 1\nMiniseries: 2\nReality: 3\nScripted: 4\nTalk Show: 5\nVideo: 6",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the TV show credits for a person.\n\nYou can query for some extra details about the credit with the [credit method](#endpoint:xPWdEBLkvCNZSicLN).",
                "url": "https://api.themoviedb.org/3/person/{person_id}/tv_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_tv_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV episode.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get collection details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| March 16, 2018 | Added the [translations](#endpoint:bhcsxEgRvyk3N7FnD) method. |",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}",
                "method": "GET",
                "api_name": "GET_collection_collection_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            }
        ],
        "dataset": "tmdb",
        "qid": "40"
    },
    {
        "query": "How many movies are named 'Phineas and Ferb'? Who directed the most recently released one?",
        "solution": [
            [
                "GET_search_movie",
                1
            ],
            [
                "GET_movie_movie_id_credits",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/movie",
            "https://api.themoviedb.org/3/movie/{movie_id}/credits"
        ],
        "api_list": [
            {
                "description": "Get the TV network logos by id.\n\nThere are two image formats that are supported for networks, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/network/{network_id}/images",
                "method": "GET",
                "api_name": "GET_network_network_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a collection by id.",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}/images",
                "method": "GET",
                "api_name": "GET_collection_collection_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV season.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for movies.",
                "url": "https://api.themoviedb.org/3/search/movie",
                "method": "GET",
                "api_name": "GET_search_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "the primary release year",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the release date along with the certification for a movie.\n\nRelease dates support different types:\n\n1. Premiere\n2. Theatrical (limited)\n3. Theatrical\n4. Digital\n5. Physical\n6. TV",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/release_dates",
                "method": "GET",
                "api_name": "GET_movie_movie_id_release_dates",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the review for a movie",
                "url": "https://api.themoviedb.org/3/review/{review_id}",
                "method": "GET",
                "api_name": "GET_review_review_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "review_id",
                        "description": "the review id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the credits (cast, crew and guest stars) for a TV episode.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for companies.",
                "url": "https://api.themoviedb.org/3/search/company",
                "method": "GET",
                "api_name": "GET_search_company",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the cast and crew for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/credits",
                "method": "GET",
                "api_name": "GET_movie_movie_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular movies on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/movie/popular",
                "method": "GET",
                "api_name": "GET_movie_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Search for people.",
                "url": "https://api.themoviedb.org/3/search/person",
                "method": "GET",
                "api_name": "GET_search_person",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for collections.",
                "url": "https://api.themoviedb.org/3/search/collection",
                "method": "GET",
                "api_name": "GET_search_collection",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get a list of shows that are currently on the air.\n\nThis query looks for any TV show that has an episode with an air date in the next 7 days.",
                "url": "https://api.themoviedb.org/3/tv/on_the_air",
                "method": "GET",
                "api_name": "GET_tv_on_the_air",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the user reviews for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/reviews",
                "method": "GET",
                "api_name": "GET_movie_movie_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular TV shows on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/tv/popular",
                "method": "GET",
                "api_name": "GET_tv_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the keywords that have been added to a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/keywords",
                "method": "GET",
                "api_name": "GET_tv_tv_id_keywords",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover TV shows by different types of data like average rating, number of votes, genres, the network they aired on and air dates.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/tv",
                "method": "GET",
                "api_name": "GET_discover_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "vote_average.desc",
                                "vote_average.asc",
                                "first_air_date.desc",
                                "first_air_date.asc",
                                "popularity.desc",
                                "popularity.asc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is greater or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is less than or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows that have a original air date year that equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "America/New_York"
                        },
                        "description": "Used in conjunction with the air_date.gte/lte filter to calculate the proper UTC offset.",
                        "type": "string"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_networks",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of network ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is greater than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "include_null_first_air_dates",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Use this filter to include TV shows that don't have an air date while using any of the \"first_air_date\" filters.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "screened_theatrically",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results to include items that have been screened theatrically.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes TV shows that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "with_status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        },
                        "description": "Filter TV shows by their status.\n\nReturning Series: 0\nPlanned: 1\nIn Production: 2\nEnded: 3\nCancelled: 4\nPilot: 5",
                        "type": "string"
                    },
                    {
                        "name": "with_type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        },
                        "description": "Filter TV shows by their type.\n\nDocumentary: 0\nNews: 1\nMiniseries: 2\nReality: 3\nScripted: 4\nTalk Show: 5\nVideo: 6",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV episode.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for a TV show.",
                "url": "https://api.themoviedb.org/3/search/tv",
                "method": "GET",
                "api_name": "GET_search_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The first air data year.",
                        "type": "integer"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "17"
    },
    {
        "query": "Please list all the works Zendaya has appeared in since 2000, along with the roles she played in them. For the highest-rated movie among these works, list the top five reviews.",
        "solution": [
            [
                "GET_search_person",
                1
            ],
            [
                "GET_person_person_id_movie_credits",
                1
            ],
            [
                "GET_movie_movie_id_reviews",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/person",
            "https://api.themoviedb.org/3/person/{person_id}/movie_credits",
            "https://api.themoviedb.org/3/movie/{movie_id}/reviews"
        ],
        "api_list": [
            {
                "description": "Get the most newly created movie. This is a live response and will continuously change.",
                "url": "https://api.themoviedb.org/3/movie/latest",
                "method": "GET",
                "api_name": "GET_movie_latest",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the images that belong to a TV episode.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a movie or TV credit details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 13, 2018 | Movie credits are now supported. |",
                "url": "https://api.themoviedb.org/3/credit/{credit_id}",
                "method": "GET",
                "api_name": "GET_credit_credit_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "credit_id",
                        "description": "the credit id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the credits for TV season.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a collection by id.",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}/images",
                "method": "GET",
                "api_name": "GET_collection_collection_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of similar TV shows. These items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/similar",
                "method": "GET",
                "api_name": "GET_tv_tv_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the credits (cast, crew and guest stars) for a TV episode.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get a list of similar movies. This is **not** the same as the \"Recommendation\" system you see on the website.\n\nThese items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/similar",
                "method": "GET",
                "api_name": "GET_movie_movie_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for TV shows.",
                "url": "https://api.themoviedb.org/3/genre/tv/list",
                "method": "GET",
                "api_name": "GET_genre_tv_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Search for people.",
                "url": "https://api.themoviedb.org/3/search/person",
                "method": "GET",
                "api_name": "GET_search_person",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the movie credits for a person, the results contains various information such as popularity and release date.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/movie_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_movie_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV show credits for a person.\n\nYou can query for some extra details about the credit with the [credit method](#endpoint:xPWdEBLkvCNZSicLN).",
                "url": "https://api.themoviedb.org/3/person/{person_id}/tv_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_tv_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover movies by different types of data like average rating, number of votes, genres and certifications. You can get a valid list of certifications from the [certifications list](#endpoint:faFKjuKG2HnwexAWM) method.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nPlease note, when using `certification` \\ `certification.lte` you must also specify `certification_country`. These two parameters work together in order to filter the results. You can only filter results with the countries we have added to our [certifications list](#endpoint:faFKjuKG2HnwexAWM).\n\nIf you specify the `region` parameter, the regional release date will be used instead of the primary release date. The date returned will be the first date based on your query (ie. if a `with_release_type` is specified). It's important to note the order of the release types that are used. Specifying \"2|3\" would return the limited theatrical release date as opposed to \"3|2\" which would return the theatrical date.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/movie",
                "method": "GET",
                "api_name": "GET_discover_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "popularity.asc",
                                "popularity.desc",
                                "release_date.asc",
                                "release_date.desc",
                                "revenue.asc",
                                "revenue.desc",
                                "primary_release_date.asc",
                                "primary_release_date.desc",
                                "original_title.asc",
                                "original_title.desc",
                                "vote_average.asc",
                                "vote_average.desc",
                                "vote_count.asc",
                                "vote_count.desc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "certification_country",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Used in conjunction with the certification filter, use this to specify a country with a valid certification.",
                        "type": "string"
                    },
                    {
                        "name": "certification",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results with a valid certification from the 'certification_country' field.",
                        "type": "string"
                    },
                    {
                        "name": "certification.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a certification that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "certification.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a certification that is greater than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "A filter and include or exclude adult movies.",
                        "type": "boolean"
                    },
                    {
                        "name": "include_video",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "A filter to include or exclude videos.",
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A filter to limit the results to a specific primary release year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a primary release date that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "primary_release_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a primary release date that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "release_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a release date (looking at all release dates) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "release_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a release date (looking at all release dates) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "with_release_type",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Specify a comma (AND) or pipe (OR) separated value to filter release types by. These release types map to the same values found on the movie release date method.",
                        "type": "integer"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A filter to limit the results to a specific year (looking at all release dates).",
                        "type": "integer"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a vote count that is greater or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "vote_count.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a vote count that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_average.lte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "with_cast",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of person ID's. Only include movies that have one of the ID's added as an actor.",
                        "type": "string"
                    },
                    {
                        "name": "with_crew",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of person ID's. Only include movies that have one of the ID's added as a crew member.",
                        "type": "string"
                    },
                    {
                        "name": "with_people",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of person ID's. Only include movies that have one of the ID's added as a either a actor or a crew member.",
                        "type": "string"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes movies that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a runtime that is greater or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular movies on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/movie/popular",
                "method": "GET",
                "api_name": "GET_movie_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the list of popular people on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/person/popular",
                "method": "GET",
                "api_name": "GET_person_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the TV network logos by id.\n\nThere are two image formats that are supported for networks, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/network/{network_id}/images",
                "method": "GET",
                "api_name": "GET_network_network_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the top rated movies on TMDb.",
                "url": "https://api.themoviedb.org/3/movie/top_rated",
                "method": "GET",
                "api_name": "GET_movie_top_rated",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the credits (cast and crew) that have been added to a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV season.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "7"
    },
    {
        "query": "What genre is the movie \"Inception\"? Did the film's revenue exceed its budget?",
        "solution": [
            [
                "GET_search_person",
                1
            ],
            [
                "GET_movie_movie_id",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/person",
            "https://api.themoviedb.org/3/movie/{movie_id}"
        ],
        "api_list": [
            {
                "description": "Get a list of similar movies. This is **not** the same as the \"Recommendation\" system you see on the website.\n\nThese items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/similar",
                "method": "GET",
                "api_name": "GET_movie_movie_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary TV show details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 17, 2018 | We now return `last_episode_to_air` and `next_episode_to_air` fields. |\n| March 12, 2018 | Networks return proper logos and we introduced SVG support. |\n| March 8, 2018 | The `seasons` field now returns the translated names and overviews. |",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}",
                "method": "GET",
                "api_name": "GET_tv_tv_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the review for a movie",
                "url": "https://api.themoviedb.org/3/review/{review_id}",
                "method": "GET",
                "api_name": "GET_review_review_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "review_id",
                        "description": "the review id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the most newly created TV show. This is a live response and will continuously change.",
                "url": "https://api.themoviedb.org/3/tv/latest",
                "method": "GET",
                "api_name": "GET_tv_latest",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get a list of similar TV shows. These items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/similar",
                "method": "GET",
                "api_name": "GET_tv_tv_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for people.",
                "url": "https://api.themoviedb.org/3/search/person",
                "method": "GET",
                "api_name": "GET_search_person",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get a companies details by id.",
                "url": "https://api.themoviedb.org/3/company/{company_id}",
                "method": "GET",
                "api_name": "GET_company_company_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "company_id",
                        "description": "the company id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV network logos by id.\n\nThere are two image formats that are supported for networks, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\n\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).",
                "url": "https://api.themoviedb.org/3/network/{network_id}/images",
                "method": "GET",
                "api_name": "GET_network_network_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary information about a movie.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}",
                "method": "GET",
                "api_name": "GET_movie_movie_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "append_to_response",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Append requests within the same namespace to the response.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of recommended movies for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/recommendations",
                "method": "GET",
                "api_name": "GET_movie_movie_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular movies on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/movie/popular",
                "method": "GET",
                "api_name": "GET_movie_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Discover TV shows by different types of data like average rating, number of votes, genres, the network they aired on and air dates.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/tv",
                "method": "GET",
                "api_name": "GET_discover_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "vote_average.desc",
                                "vote_average.asc",
                                "first_air_date.desc",
                                "first_air_date.asc",
                                "popularity.desc",
                                "popularity.asc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is greater or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is less than or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows that have a original air date year that equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "America/New_York"
                        },
                        "description": "Used in conjunction with the air_date.gte/lte filter to calculate the proper UTC offset.",
                        "type": "string"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_networks",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of network ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is greater than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "include_null_first_air_dates",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Use this filter to include TV shows that don't have an air date while using any of the \"first_air_date\" filters.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "screened_theatrically",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results to include items that have been screened theatrically.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes TV shows that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "with_status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        },
                        "description": "Filter TV shows by their status.\n\nReturning Series: 0\nPlanned: 1\nIn Production: 2\nEnded: 3\nCancelled: 4\nPilot: 5",
                        "type": "string"
                    },
                    {
                        "name": "with_type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        },
                        "description": "Filter TV shows by their type.\n\nDocumentary: 0\nNews: 1\nMiniseries: 2\nReality: 3\nScripted: 4\nTalk Show: 5\nVideo: 6",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the details of a network.",
                "url": "https://api.themoviedb.org/3/network/{network_id}",
                "method": "GET",
                "api_name": "GET_network_network_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "network_id",
                        "description": "the network id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the cast and crew for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/credits",
                "method": "GET",
                "api_name": "GET_movie_movie_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of shows that are currently on the air.\n\nThis query looks for any TV show that has an episode with an air date in the next 7 days.",
                "url": "https://api.themoviedb.org/3/tv/on_the_air",
                "method": "GET",
                "api_name": "GET_tv_on_the_air",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for TV shows.",
                "url": "https://api.themoviedb.org/3/genre/tv/list",
                "method": "GET",
                "api_name": "GET_genre_tv_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get a list of the current popular TV shows on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/tv/popular",
                "method": "GET",
                "api_name": "GET_tv_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the user reviews for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/reviews",
                "method": "GET",
                "api_name": "GET_movie_movie_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover movies by different types of data like average rating, number of votes, genres and certifications. You can get a valid list of certifications from the [certifications list](#endpoint:faFKjuKG2HnwexAWM) method.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nPlease note, when using `certification` \\ `certification.lte` you must also specify `certification_country`. These two parameters work together in order to filter the results. You can only filter results with the countries we have added to our [certifications list](#endpoint:faFKjuKG2HnwexAWM).\n\nIf you specify the `region` parameter, the regional release date will be used instead of the primary release date. The date returned will be the first date based on your query (ie. if a `with_release_type` is specified). It's important to note the order of the release types that are used. Specifying \"2|3\" would return the limited theatrical release date as opposed to \"3|2\" which would return the theatrical date.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/movie",
                "method": "GET",
                "api_name": "GET_discover_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "popularity.asc",
                                "popularity.desc",
                                "release_date.asc",
                                "release_date.desc",
                                "revenue.asc",
                                "revenue.desc",
                                "primary_release_date.asc",
                                "primary_release_date.desc",
                                "original_title.asc",
                                "original_title.desc",
                                "vote_average.asc",
                                "vote_average.desc",
                                "vote_count.asc",
                                "vote_count.desc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "certification_country",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Used in conjunction with the certification filter, use this to specify a country with a valid certification.",
                        "type": "string"
                    },
                    {
                        "name": "certification",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results with a valid certification from the 'certification_country' field.",
                        "type": "string"
                    },
                    {
                        "name": "certification.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a certification that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "certification.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a certification that is greater than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "A filter and include or exclude adult movies.",
                        "type": "boolean"
                    },
                    {
                        "name": "include_video",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "A filter to include or exclude videos.",
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A filter to limit the results to a specific primary release year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a primary release date that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "primary_release_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a primary release date that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "release_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a release date (looking at all release dates) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "release_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include movies that have a release date (looking at all release dates) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "with_release_type",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Specify a comma (AND) or pipe (OR) separated value to filter release types by. These release types map to the same values found on the movie release date method.",
                        "type": "integer"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A filter to limit the results to a specific year (looking at all release dates).",
                        "type": "integer"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a vote count that is greater or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "vote_count.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a vote count that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_average.lte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "with_cast",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of person ID's. Only include movies that have one of the ID's added as an actor.",
                        "type": "string"
                    },
                    {
                        "name": "with_crew",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of person ID's. Only include movies that have one of the ID's added as a crew member.",
                        "type": "string"
                    },
                    {
                        "name": "with_people",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of person ID's. Only include movies that have one of the ID's added as a either a actor or a crew member.",
                        "type": "string"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes movies that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a runtime that is greater or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "43"
    },
    {
        "query": "How many movies are named 'Modern Family'? Please find the director of the most popular one among them.",
        "solution": [
            [
                "GET_search_movie",
                1
            ],
            [
                "GET_movie_movie_id_credits",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/movie",
            "https://api.themoviedb.org/3/movie/{movie_id}/credits"
        ],
        "api_list": [
            {
                "description": "Get the images for a person.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/images",
                "method": "GET",
                "api_name": "GET_person_person_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary TV show details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 17, 2018 | We now return `last_episode_to_air` and `next_episode_to_air` fields. |\n| March 12, 2018 | Networks return proper logos and we introduced SVG support. |\n| March 8, 2018 | The `seasons` field now returns the translated names and overviews. |",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}",
                "method": "GET",
                "api_name": "GET_tv_tv_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the cast and crew for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/credits",
                "method": "GET",
                "api_name": "GET_movie_movie_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\n\n#### Valid Media Types\n\n| **Media Type** | **Description** |\n| - | - |\n| all | Include all movies, TV shows and people in the results as a global trending list. |\n| movie | Show the trending movies in the results. |\n| tv | Show the trending TV shows in the results. |\n| person | Show the trending people in the results. |\n\n#### Valid Time Windows\n\n| **Time Window** | **Description** |\n| - | - |\n| day | View the trending list for the day. |\n| week | View the trending list for the week. |",
                "url": "https://api.themoviedb.org/3/trending/{media_type}/{time_window}",
                "method": "GET",
                "api_name": "GET_trending_media_type_time_window",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "media_type",
                        "description": "the media type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "time_window",
                        "description": "the time window",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for movies.",
                "url": "https://api.themoviedb.org/3/search/movie",
                "method": "GET",
                "api_name": "GET_search_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "the primary release year",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the TV season details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a collection by id.",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}/images",
                "method": "GET",
                "api_name": "GET_collection_collection_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover TV shows by different types of data like average rating, number of votes, genres, the network they aired on and air dates.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/tv",
                "method": "GET",
                "api_name": "GET_discover_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "vote_average.desc",
                                "vote_average.asc",
                                "first_air_date.desc",
                                "first_air_date.asc",
                                "popularity.desc",
                                "popularity.asc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is greater or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is less than or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows that have a original air date year that equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "America/New_York"
                        },
                        "description": "Used in conjunction with the air_date.gte/lte filter to calculate the proper UTC offset.",
                        "type": "string"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_networks",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of network ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is greater than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "include_null_first_air_dates",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Use this filter to include TV shows that don't have an air date while using any of the \"first_air_date\" filters.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "screened_theatrically",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results to include items that have been screened theatrically.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes TV shows that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "with_status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        },
                        "description": "Filter TV shows by their status.\n\nReturning Series: 0\nPlanned: 1\nIn Production: 2\nEnded: 3\nCancelled: 4\nPilot: 5",
                        "type": "string"
                    },
                    {
                        "name": "with_type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        },
                        "description": "Filter TV shows by their type.\n\nDocumentary: 0\nNews: 1\nMiniseries: 2\nReality: 3\nScripted: 4\nTalk Show: 5\nVideo: 6",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get a list of TV shows that are airing today. This query is purely day based as we do not currently support airing times.\n\nYou can specify a [timezone](endpoint:KQ4CDdEoWKJYLkrhS) to offset the day calculation. Without a specified timezone, this query defaults to EST (Eastern Time UTC-05:00).",
                "url": "https://api.themoviedb.org/3/tv/airing_today",
                "method": "GET",
                "api_name": "GET_tv_airing_today",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the credits (cast and crew) that have been added to a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/credits",
                "method": "GET",
                "api_name": "GET_tv_tv_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the reviews for a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/reviews",
                "method": "GET",
                "api_name": "GET_tv_tv_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for TV shows.",
                "url": "https://api.themoviedb.org/3/genre/tv/list",
                "method": "GET",
                "api_name": "GET_genre_tv_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Search for collections.",
                "url": "https://api.themoviedb.org/3/search/collection",
                "method": "GET",
                "api_name": "GET_search_collection",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get a companies details by id.",
                "url": "https://api.themoviedb.org/3/company/{company_id}",
                "method": "GET",
                "api_name": "GET_company_company_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "company_id",
                        "description": "the company id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV show credits for a person.\n\nYou can query for some extra details about the credit with the [credit method](#endpoint:xPWdEBLkvCNZSicLN).",
                "url": "https://api.themoviedb.org/3/person/{person_id}/tv_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_tv_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of similar movies. This is **not** the same as the \"Recommendation\" system you see on the website.\n\nThese items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/similar",
                "method": "GET",
                "api_name": "GET_movie_movie_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV episode.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get collection details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| March 16, 2018 | Added the [translations](#endpoint:bhcsxEgRvyk3N7FnD) method. |",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}",
                "method": "GET",
                "api_name": "GET_collection_collection_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of similar TV shows. These items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/similar",
                "method": "GET",
                "api_name": "GET_tv_tv_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of popular people on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/person/popular",
                "method": "GET",
                "api_name": "GET_person_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "14"
    },
    {
        "query": "Here is a list of actors: Alan Tudyk, Dan Stevens, Miyoshi Yuzukaaa, Supaporn Malisorn, Hannah Love Lanier, Yoo Jung, Hunter Schafer, Aya Asahina, Derya P\u0131nar Ak, Zhao Lusi, Rowoon, Marlo Kelly, Min Do-yoon. Please identify the distribution of nationalities among these actors and report how many actors from the list are from each country",
        "solution": [
            [
                "GET_search_person",
                13
            ],
            [
                "GET_person_person_id",
                12
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/person",
            "https://api.themoviedb.org/3/person/{person_id}"
        ],
        "api_list": [
            {
                "description": "Get a list of movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\n\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.",
                "url": "https://api.themoviedb.org/3/movie/now_playing",
                "method": "GET",
                "api_name": "GET_movie_now_playing",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get a list of similar TV shows. These items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/similar",
                "method": "GET",
                "api_name": "GET_tv_tv_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of TV show recommendations for this item.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/recommendations",
                "method": "GET",
                "api_name": "GET_tv_tv_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Discover TV shows by different types of data like average rating, number of votes, genres, the network they aired on and air dates.\n\nDiscover also supports a nice list of sort options. See below for all of the available options.\n\nAlso note that a number of filters support being comma (`,`) or pipe (`|`) separated. Comma's are treated like an `AND` and query while pipe's are an `OR`. \n\nSome examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).",
                "url": "https://api.themoviedb.org/3/discover/tv",
                "method": "GET",
                "api_name": "GET_discover_tv",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "",
                                "vote_average.desc",
                                "vote_average.asc",
                                "first_air_date.desc",
                                "first_air_date.asc",
                                "popularity.desc",
                                "popularity.asc"
                            ],
                            "default": "popularity.desc"
                        },
                        "description": "Choose from one of the many available sort options.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is greater or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a air date (by looking at all episodes) that is less than or equal to the specified value.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.gte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is greater or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date.lte",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter and only include TV shows that have a original air date that is less than or equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "string"
                    },
                    {
                        "name": "first_air_date_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows that have a original air date year that equal to the specified value. Can be used in conjunction with the \"include_null_first_air_dates\" filter if you want to include items with no air date.",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify the page of results to query.",
                        "type": "integer"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "America/New_York"
                        },
                        "description": "Used in conjunction with the air_date.gte/lte filter to calculate the proper UTC offset.",
                        "type": "string"
                    },
                    {
                        "name": "vote_average.gte",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filter and only include movies that have a rating that is greater or equal to the specified value.",
                        "type": "number"
                    },
                    {
                        "name": "vote_count.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include movies that have a rating that is less than or equal to the specified value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_networks",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of network ids that you want to include in the results.",
                        "type": "string"
                    },
                    {
                        "name": "without_genres",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma separated value of genre ids that you want to exclude from the results.",
                        "type": "string"
                    },
                    {
                        "name": "with_runtime.gte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is greater than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "with_runtime.lte",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter and only include TV shows with an episode runtime that is less than or equal to a value.",
                        "type": "integer"
                    },
                    {
                        "name": "include_null_first_air_dates",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Use this filter to include TV shows that don't have an air date while using any of the \"first_air_date\" filters.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_original_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify an ISO 639-1 string to filter results by their original language value.",
                        "type": "string"
                    },
                    {
                        "name": "without_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude items with certain keywords. You can comma and pipe seperate these values to create an 'AND' or 'OR' logic.",
                        "type": "string"
                    },
                    {
                        "name": "screened_theatrically",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results to include items that have been screened theatrically.",
                        "type": "boolean"
                    },
                    {
                        "name": "with_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of production company ID's. Only include movies that have one of the ID's added as a production company.",
                        "type": "string"
                    },
                    {
                        "name": "with_keywords",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of keyword ID's. Only includes TV shows that have one of the ID's added as a keyword.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_providers",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma or pipe separated list of watch provider ID's. Combine this filter with `watch_region` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "watch_region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 3166-1 code. Combine this filter with `with_watch_providers` in order to filter your results by a specific watch provider in a specific region.",
                        "type": "string"
                    },
                    {
                        "name": "with_watch_monetization_types",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flatrate",
                                "free",
                                "ads",
                                "rent",
                                "buy"
                            ]
                        },
                        "description": "In combination with `watch_region`, you can filter by monetization type.",
                        "type": "string"
                    },
                    {
                        "name": "with_status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        },
                        "description": "Filter TV shows by their status.\n\nReturning Series: 0\nPlanned: 1\nIn Production: 2\nEnded: 3\nCancelled: 4\nPilot: 5",
                        "type": "string"
                    },
                    {
                        "name": "with_type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        },
                        "description": "Filter TV shows by their type.\n\nDocumentary: 0\nNews: 1\nMiniseries: 2\nReality: 3\nScripted: 4\nTalk Show: 5\nVideo: 6",
                        "type": "string"
                    },
                    {
                        "name": "without_companies",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the results to exclude the specific production companies you specify here. `AND` / `OR` filters are supported.",
                        "type": "string"
                    }
                ]
            },
            {
                "description": "Get the movie credits for a person, the results contains various information such as popularity and release date.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/movie_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_movie_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV episode.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Search for collections.",
                "url": "https://api.themoviedb.org/3/search/collection",
                "method": "GET",
                "api_name": "GET_search_collection",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the review for a movie",
                "url": "https://api.themoviedb.org/3/review/{review_id}",
                "method": "GET",
                "api_name": "GET_review_review_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "review_id",
                        "description": "the review id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV season.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the list of official genres for TV shows.",
                "url": "https://api.themoviedb.org/3/genre/tv/list",
                "method": "GET",
                "api_name": "GET_genre_tv_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the list of official genres for movies.",
                "url": "https://api.themoviedb.org/3/genre/movie/list",
                "method": "GET",
                "api_name": "GET_genre_movie_list",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get a list of similar movies. This is **not** the same as the \"Recommendation\" system you see on the website.\n\nThese items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/similar",
                "method": "GET",
                "api_name": "GET_movie_movie_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the top rated TV shows on TMDb.",
                "url": "https://api.themoviedb.org/3/tv/top_rated",
                "method": "GET",
                "api_name": "GET_tv_top_rated",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular TV shows on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/tv/popular",
                "method": "GET",
                "api_name": "GET_tv_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the primary information about a movie.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}",
                "method": "GET",
                "api_name": "GET_movie_movie_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "append_to_response",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Append requests within the same namespace to the response.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a collection by id.",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}/images",
                "method": "GET",
                "api_name": "GET_collection_collection_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary person details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 17, 2018 | Added the `known_for_department` field. |\n| April 26, 2018 | Added the [translations](#endpoint:CSaMjCxXAtGpxNGfS) method. |\n| November 9, 2016 | Biographies are now translatable on TMDb. This means you can query person details with a language parameter. |",
                "url": "https://api.themoviedb.org/3/person/{person_id}",
                "method": "GET",
                "api_name": "GET_person_person_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV show credits for a person.\n\nYou can query for some extra details about the credit with the [credit method](#endpoint:xPWdEBLkvCNZSicLN).",
                "url": "https://api.themoviedb.org/3/person/{person_id}/tv_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_tv_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the reviews for a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/reviews",
                "method": "GET",
                "api_name": "GET_tv_tv_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a movie or TV credit details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 13, 2018 | Movie credits are now supported. |",
                "url": "https://api.themoviedb.org/3/credit/{credit_id}",
                "method": "GET",
                "api_name": "GET_credit_credit_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "credit_id",
                        "description": "the credit id",
                        "in": "query"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "4"
    },
    {
        "query": "Which of the movies \"Alienoid,\" \"No Way Up,\" and \"The First Omen\" is a science fiction film? Please find the rating and the director of that movie.",
        "solution": [
            [
                "GET_search_movie",
                1
            ],
            [
                "GET_movie_movie_id",
                1
            ],
            [
                "GET_movie_movie_id_credits",
                1
            ]
        ],
        "url": [
            "https://api.themoviedb.org/3/search/movie",
            "https://api.themoviedb.org/3/movie/{movie_id}",
            "https://api.themoviedb.org/3/movie/{movie_id}/credits"
        ],
        "api_list": [
            {
                "description": "Get a list of similar TV shows. These items are assembled by looking at keywords and genres.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/similar",
                "method": "GET",
                "api_name": "GET_tv_tv_id_similar",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the most newly created movie. This is a live response and will continuously change.",
                "url": "https://api.themoviedb.org/3/movie/latest",
                "method": "GET",
                "api_name": "GET_movie_latest",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": []
            },
            {
                "description": "Get the TV episode details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| June 1, 2018 | Added the [translations](#endpoint:5SFwZar3LkP99QMp7) method. |",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/episode/{episode_number}",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_episode_episode_number",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "episode_number",
                        "description": "the episode number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of the current popular TV shows on TMDb. This list updates daily.",
                "url": "https://api.themoviedb.org/3/tv/popular",
                "method": "GET",
                "api_name": "GET_tv_popular",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Search for movies.",
                "url": "https://api.themoviedb.org/3/search/movie",
                "method": "GET",
                "api_name": "GET_search_movie",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Pass a text query to search. This value should be URI encoded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "name": "include_adult",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Choose whether to inlcude adult (pornography) content in the results.",
                        "type": "boolean"
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a ISO 3166-1 code to filter release dates. Must be uppercase.",
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The year.",
                        "type": "integer"
                    },
                    {
                        "name": "primary_release_year",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "the primary release year",
                        "type": "integer"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a movie.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/images",
                "method": "GET",
                "api_name": "GET_movie_movie_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "include_image_language",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The inlcuded image language.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get collection details by id.\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| March 16, 2018 | Added the [translations](#endpoint:bhcsxEgRvyk3N7FnD) method. |",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}",
                "method": "GET",
                "api_name": "GET_collection_collection_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images that belong to a TV season.\n\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/season/{season_number}/images",
                "method": "GET",
                "api_name": "GET_tv_tv_id_season_season_number_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "season_number",
                        "description": "the season number",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the release date along with the certification for a movie.\n\nRelease dates support different types:\n\n1. Premiere\n2. Theatrical (limited)\n3. Theatrical\n4. Digital\n5. Physical\n6. TV",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/release_dates",
                "method": "GET",
                "api_name": "GET_movie_movie_id_release_dates",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the cast and crew for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/credits",
                "method": "GET",
                "api_name": "GET_movie_movie_id_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary person details by id.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\n\n#### Recent Changes\n\n| **Date** | **Change** |\n| - | - |\n| July 17, 2018 | Added the `known_for_department` field. |\n| April 26, 2018 | Added the [translations](#endpoint:CSaMjCxXAtGpxNGfS) method. |\n| November 9, 2016 | Biographies are now translatable on TMDb. This means you can query person details with a language parameter. |",
                "url": "https://api.themoviedb.org/3/person/{person_id}",
                "method": "GET",
                "api_name": "GET_person_person_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the primary information about a movie.\n\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}",
                "method": "GET",
                "api_name": "GET_movie_movie_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "append_to_response",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Append requests within the same namespace to the response.",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the review for a movie",
                "url": "https://api.themoviedb.org/3/review/{review_id}",
                "method": "GET",
                "api_name": "GET_review_review_id",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "review_id",
                        "description": "the review id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a person.",
                "url": "https://api.themoviedb.org/3/person/{person_id}/images",
                "method": "GET",
                "api_name": "GET_person_person_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the TV show credits for a person.\n\nYou can query for some extra details about the credit with the [credit method](#endpoint:xPWdEBLkvCNZSicLN).",
                "url": "https://api.themoviedb.org/3/person/{person_id}/tv_credits",
                "method": "GET",
                "api_name": "GET_person_person_id_tv_credits",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "person_id",
                        "description": "the person id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the user reviews for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/reviews",
                "method": "GET",
                "api_name": "GET_movie_movie_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get a list of recommended movies for a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/recommendations",
                "method": "GET",
                "api_name": "GET_movie_movie_id_recommendations",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the keywords that have been added to a movie.",
                "url": "https://api.themoviedb.org/3/movie/{movie_id}/keywords",
                "method": "GET",
                "api_name": "GET_movie_movie_id_keywords",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "movie_id",
                        "description": "the movie id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the reviews for a TV show.",
                "url": "https://api.themoviedb.org/3/tv/{tv_id}/reviews",
                "method": "GET",
                "api_name": "GET_tv_tv_id_reviews",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Specify which page to query.",
                        "type": "integer"
                    },
                    {
                        "type": "string",
                        "name": "tv_id",
                        "description": "the tv id",
                        "in": "query"
                    }
                ]
            },
            {
                "description": "Get the images for a collection by id.",
                "url": "https://api.themoviedb.org/3/collection/{collection_id}/images",
                "method": "GET",
                "api_name": "GET_collection_collection_id_images",
                "category_name": "movie",
                "standard_tool_name": "tmdb",
                "tool_name": "tmdb",
                "required_parameters": [
                    {
                        "type": "string",
                        "name": "collection_id",
                        "description": "the collection id",
                        "in": "query"
                    }
                ]
            }
        ],
        "dataset": "tmdb",
        "qid": "38"
    },
    {
        "query": "In the first three places starting with \"Fisherman\", is any places currently under a severe weather alert? Which day in the next 7 days will have the highest feels like temperature in these three places respectively? What are the sunrise times for each of these places on that day?",
        "solution": [
            [
                "GET_find_places_prefix",
                1
            ],
            [
                "GET_alerts",
                3
            ],
            [
                "GET_daily_weather",
                3
            ],
            [
                "GET_astro",
                3
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "https://ai-weather-by-meteosource.p.rapidapi.com/astro"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "34"
    },
    {
        "query": "In the next 21 days, which day will have the highest wind speed in Rome, Madrid, and Moscow respectively? What is the sunrise time in each of these locations on the day with the highest wind speed?",
        "solution": [
            [
                "GET_find_places",
                3
            ],
            [
                "GET_daily_weather",
                3
            ],
            [
                "GET_astro",
                3
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "https://ai-weather-by-meteosource.p.rapidapi.com/astro"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "21"
    },
    {
        "query": "I'm about to depart from London to Paris for a business trip. Can you tell me if there will be any precipitation in London in the next five hours? This will determine if my flight will be delayed. Also, I plan to spend some time touring Paris. Can you tell me the sunrise time in Paris tomorrow, as well as the feels like temperature in Paris tomorrow?",
        "solution": [
            [
                "GET_find_places",
                2
            ],
            [
                "GET_hourly_weather",
                1
            ],
            [
                "GET_astro",
                1
            ],
            [
                "GET_daily_weather",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "43"
    },
    {
        "query": "What is the current wind speed in the first three places starting with \"Max\"? What is the wind direction forecast for these places tomorrow?",
        "solution": [
            [
                "GET_find_places_prefix",
                1
            ],
            [
                "GET_current_weather",
                3
            ],
            [
                "GET_daily_weather",
                3
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "17"
    },
    {
        "query": "Which day in the next 30 days will have the highest average temperature in Rome? What is the sunset time on that day? What was the atmospheric pressure on that day two years ago?",
        "solution": [
            [
                "GET_find_places",
                1
            ],
            [
                "GET_weather_statistics",
                1
            ],
            [
                "GET_astro",
                1
            ],
            [
                "GET_historical_weather",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics",
            "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "38"
    },
    {
        "query": "What is the current feels like temperature in the place with GPS coordinates 37.9838\u00b0 N, 23.7275\u00b0 E? What is the highest feels like temperature in this place in the next 5 hours? How many days out of the next 15 days are forecasted to be sunny in this place?",
        "solution": [
            [
                "GET_nearest_place",
                1
            ],
            [
                "GET_current_weather",
                1
            ],
            [
                "GET_hourly_weather",
                1
            ],
            [
                "GET_daily_weather",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "39"
    },
    {
        "query": "Which day in the next 30 days will have the highest average temperature in Berlin? What is the sunset time on that day?",
        "solution": [
            [
                "GET_find_places",
                1
            ],
            [
                "GET_weather_statistics",
                1
            ],
            [
                "GET_astro",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics",
            "https://ai-weather-by-meteosource.p.rapidapi.com/astro"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "16"
    },
    {
        "query": "What is the current visibility in Berlin? If I want to go to Berlin to watch the sunrise tomorrow, when should I arrive? What is the visibility in Berlin during the sunrise hour tomorrow?",
        "solution": [
            [
                "GET_find_places",
                1
            ],
            [
                "GET_current_weather",
                1
            ],
            [
                "GET_astro",
                1
            ],
            [
                "GET_hourly_weather",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "https://ai-weather-by-meteosource.p.rapidapi.com/hourly"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "42"
    },
    {
        "query": "Will it rain in London in the next sixty minutes, and did it rain in London on April 10th, 2023?",
        "solution": [
            [
                "GET_find_places",
                1
            ],
            [
                "GET_minutely_weather",
                1
            ],
            [
                "GET_historical_weather",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "1"
    },
    {
        "query": "Among Rome, Athens, and Madrid, which city will have the highest atmospheric pressure tomorrow? And which city had the highest atmospheric pressure on this day last year?",
        "solution": [
            [
                "GET_find_places",
                3
            ],
            [
                "GET_daily_weather",
                3
            ],
            [
                "GET_historical_weather",
                3
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "20"
    },
    {
        "query": "I'm about to travel to Madrid. Can you provide me with the following information: Has Madrid received any severe weather alerts? In the next 7 days, which day will have the earliest sunrise time in Madrid? On the day with the earliest sunrise time, what is the visibility in Madrid?",
        "solution": [
            [
                "GET_find_places",
                1
            ],
            [
                "GET_alerts",
                1
            ],
            [
                "GET_astro",
                1
            ],
            [
                "GET_daily_weather",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "35"
    },
    {
        "query": "What is the highest feels like temperature on the day with the highest average temperature in Athens over the next 21 days?",
        "solution": [
            [
                "GET_find_places",
                1
            ],
            [
                "GET_daily_weather",
                1
            ],
            [
                "GET_astro",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "https://ai-weather-by-meteosource.p.rapidapi.com/astro"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "6"
    },
    {
        "query": "What is the current precipitation amount in Paris? Which day in the next 3 days will have the highest wind speed in Paris? What is the sunrise time on that day?",
        "solution": [
            [
                "GET_find_places",
                1
            ],
            [
                "GET_current_weather",
                1
            ],
            [
                "GET_daily_weather",
                1
            ],
            [
                "GET_astro",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "https://ai-weather-by-meteosource.p.rapidapi.com/astro"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "45"
    },
    {
        "query": "My current GPS coordinates are 41.9028\u00b0 N, 12.4964\u00b0 E. Can you tell me the current wind speed at my location, if there will be any precipitation in the next two hours, and if there has been any severe weather alert issued for my current location?",
        "solution": [
            [
                "GET_nearest_place",
                1
            ],
            [
                "GET_current_weather",
                1
            ],
            [
                "GET_hourly_weather",
                1
            ],
            [
                "GET_alerts",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "https://ai-weather-by-meteosource.p.rapidapi.com/alerts"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "11"
    },
    {
        "query": "What are the current wind speeds in London, Paris, and Madrid? What are the highest wind speeds in these three places over the next 15 hours? Among these three places, which one has the highest maximum wind speed within the next 15 hours? In the place with the highest maximum wind speed within the next 15 hours, which day within the next 7 days has the earliest sunrise time? What is the wind speed on that day?",
        "solution": [
            [
                "GET_find_places",
                3
            ],
            [
                "GET_current_weather",
                3
            ],
            [
                "GET_hourly_weather",
                3
            ],
            [
                "GET_astro",
                1
            ],
            [
                "GET_daily_weather",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "48"
    },
    {
        "query": "What is the current atmospheric pressure in London? What is the highest atmospheric pressure expected in London in the next 7 hours? What is the highest atmospheric pressure forecasted in London in the next 7 days? What is the highest average wind speed expected in London in the next 30 days?",
        "solution": [
            [
                "GET_find_places",
                1
            ],
            [
                "GET_current_weather",
                1
            ],
            [
                "GET_hourly_weather",
                1
            ],
            [
                "GET_daily_weather",
                1
            ],
            [
                "GET_weather_statistics",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "32"
    },
    {
        "query": "Among London, Paris, and Berlin, which city had the highest temperature on this day last year? Starting from now, what is the temperature forecast for tomorrow in the city that had the highest temperature on this day last year?",
        "solution": [
            [
                "GET_find_places",
                3
            ],
            [
                "GET_historical_weather",
                3
            ],
            [
                "GET_daily_weather",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "27"
    },
    {
        "query": "What is the current wind speed in Berlin? What was the wind speed in Berlin on this day last year?",
        "solution": [
            [
                "GET_find_places",
                1
            ],
            [
                "GET_current_weather",
                1
            ],
            [
                "GET_historical_weather",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "26"
    },
    {
        "query": "What is the current wind speed in Paris? What was the cloud cover percentage in Paris on this day last year? What is the highest cloud cover percentage expected in Paris in the next 6 days?",
        "solution": [
            [
                "GET_find_places",
                1
            ],
            [
                "GET_current_weather",
                1
            ],
            [
                "GET_historical_weather",
                1
            ],
            [
                "GET_daily_weather",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "33"
    },
    {
        "query": "Among the first three places starting with \"Fisherman,\" have any received severe weather alerts? In the next 7 days, which day will have the highest feels like temperature in these three places respectively? What are the sunrise times for each of these places on that day? How many days in the next 15 days will be sunny in the location with the earliest sunrise time?",
        "solution": [
            [
                "GET_find_places_prefix",
                1
            ],
            [
                "GET_alerts",
                3
            ],
            [
                "GET_daily_weather",
                3
            ],
            [
                "GET_astro",
                3
            ],
            [
                "GET_weather_statistics",
                1
            ]
        ],
        "url": [
            "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        ],
        "api_list": {
            "GET_find_places": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places",
            "GET_find_places_prefix": "https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix",
            "GET_nearest_place": "https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place",
            "GET_current_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/current",
            "GET_minutely_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/minutely",
            "GET_hourly_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/hourly",
            "GET_daily_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/daily",
            "GET_alerts": "https://ai-weather-by-meteosource.p.rapidapi.com/alerts",
            "GET_astro": "https://ai-weather-by-meteosource.p.rapidapi.com/astro",
            "GET_historical_weather": "https://ai-weather-by-meteosource.p.rapidapi.com/time_machine",
            "GET_weather_statistics": "https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics"
        },
        "dataset": "weather",
        "qid": "49"
    }
]